{"version":3,"file":null,"sources":["../node_modules/iota-array/iota.js","../node_modules/is-buffer/index.js","../node_modules/ndarray/ndarray.js","../node_modules/zeros/zeros.js","../node_modules/uniq/uniq.js","../node_modules/cwise-compiler/lib/compile.js","../node_modules/cwise-compiler/lib/thunk.js","../node_modules/cwise-compiler/compiler.js","../node_modules/ndarray-ops/ndarray-ops.js","../node_modules/ndarray-pack/doConvert.js","../node_modules/ndarray-pack/convert.js","../node_modules/ndarray-gemm/lib/planner.js","../node_modules/ndarray-gemm/gemm.js","../node_modules/ndarray-diagonal/diag.js","../node_modules/dup/dup.js","../node_modules/esprima/esprima.js","../node_modules/cwise-parser/index.js","../node_modules/cwise/lib/cwise-esprima.js","../node_modules/ndarray-unpack/unpack.js","../src/capRandom.js"],"sourcesContent":["\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","\"use strict\"\n\nvar ndarray = require(\"ndarray\")\n\nfunction dtypeToType(dtype) {\n  switch(dtype) {\n    case 'uint8':\n      return Uint8Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'int32':\n      return Int32Array;\n    case 'float':\n    case 'float32':\n      return Float32Array;\n    case 'double':\n    case 'float64':\n      return Float64Array;\n    case 'uint8_clamped':\n      return Uint8ClampedArray;\n    case 'generic':\n    case 'buffer':\n    case 'data':\n    case 'dataview':\n      return ArrayBuffer;\n    case 'array':\n      return Array;\n  }\n}\n\nmodule.exports = function zeros(shape, dtype) {\n  dtype = dtype || 'float64';\n  var sz = 1;\n  for(var i=0; i<shape.length; ++i) {\n    sz *= shape[i];\n  }\n  return ndarray(new (dtypeToType(dtype))(sz), shape);\n}\n","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n","\"use strict\"\r\n\r\nvar uniq = require(\"uniq\")\r\n\r\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\r\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\r\nfunction innerFill(order, proc, body) {\r\n  var dimension = order.length\r\n    , nargs = proc.arrayArgs.length\r\n    , has_index = proc.indexArgs.length>0\r\n    , code = []\r\n    , vars = []\r\n    , idx=0, pidx=0, i, j\r\n  for(i=0; i<dimension; ++i) { // Iteration variables\r\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\r\n  }\r\n  //Compute scan deltas\r\n  for(j=0; j<nargs; ++j) {\r\n    for(i=0; i<dimension; ++i) {\r\n      pidx = idx\r\n      idx = order[i]\r\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\r\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\r\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\r\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\r\n      }\r\n    }\r\n  }\r\n  code.push(\"var \" + vars.join(\",\"))\r\n  //Scan loop\r\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\r\n    idx = order[i]\r\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\r\n  }\r\n  //Push body of inner loop\r\n  code.push(body)\r\n  //Advance scan pointers\r\n  for(i=0; i<dimension; ++i) {\r\n    pidx = idx\r\n    idx = order[i]\r\n    for(j=0; j<nargs; ++j) {\r\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\r\n    }\r\n    if(has_index) {\r\n      if(i > 0) {\r\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\r\n      }\r\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\r\n    }\r\n    code.push(\"}\")\r\n  }\r\n  return code.join(\"\\n\")\r\n}\r\n\r\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\r\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\r\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\r\nfunction outerFill(matched, order, proc, body) {\r\n  var dimension = order.length\r\n    , nargs = proc.arrayArgs.length\r\n    , blockSize = proc.blockSize\r\n    , has_index = proc.indexArgs.length > 0\r\n    , code = []\r\n  for(var i=0; i<nargs; ++i) {\r\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\r\n  }\r\n  //Generate loops for unmatched dimensions\r\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\r\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\r\n  for(var i=matched; i<dimension; ++i) {\r\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\r\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\r\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\r\n    code.push([\"j\",i,\"=0\"].join(\"\"))\r\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\r\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\r\n    if(has_index) {\r\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\r\n    }\r\n  }\r\n  for(var i=0; i<nargs; ++i) {\r\n    var indexStr = [\"offset\"+i]\r\n    for(var j=matched; j<dimension; ++j) {\r\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\r\n    }\r\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\r\n  }\r\n  code.push(innerFill(order, proc, body))\r\n  for(var i=matched; i<dimension; ++i) {\r\n    code.push(\"}\")\r\n  }\r\n  return code.join(\"\\n\")\r\n}\r\n\r\n//Count the number of compatible inner orders\r\n// This is the length of the longest common prefix of the arrays in orders.\r\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\r\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\r\nfunction countMatches(orders) {\r\n  var matched = 0, dimension = orders[0].length\r\n  while(matched < dimension) {\r\n    for(var j=1; j<orders.length; ++j) {\r\n      if(orders[j][matched] !== orders[0][matched]) {\r\n        return matched\r\n      }\r\n    }\r\n    ++matched\r\n  }\r\n  return matched\r\n}\r\n\r\n//Processes a block according to the given data types\r\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\r\nfunction processBlock(block, proc, dtypes) {\r\n  var code = block.body\r\n  var pre = []\r\n  var post = []\r\n  for(var i=0; i<block.args.length; ++i) {\r\n    var carg = block.args[i]\r\n    if(carg.count <= 0) {\r\n      continue\r\n    }\r\n    var re = new RegExp(carg.name, \"g\")\r\n    var ptrStr = \"\"\r\n    var arrNum = proc.arrayArgs.indexOf(i)\r\n    switch(proc.argTypes[i]) {\r\n      case \"offset\":\r\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\r\n        var offArg = proc.offsetArgs[offArgIndex]\r\n        arrNum = offArg.array\r\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\r\n      case \"array\":\r\n        ptrStr = \"p\" + arrNum + ptrStr\r\n        var localStr = \"l\" + i\r\n        var arrStr = \"a\" + arrNum\r\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\r\n          if(carg.count === 1) { // Argument/array used only once(?)\r\n            if(dtypes[arrNum] === \"generic\") {\r\n              if(carg.lvalue) {\r\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n                code = code.replace(re, localStr)\r\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n              } else {\r\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n              }\r\n            } else {\r\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n            }\r\n          } else if(dtypes[arrNum] === \"generic\") {\r\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n            code = code.replace(re, localStr)\r\n            if(carg.lvalue) {\r\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n            }\r\n          } else {\r\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\r\n            code = code.replace(re, localStr)\r\n            if(carg.lvalue) {\r\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\r\n            }\r\n          }\r\n        } else { // Argument to body is a \"block\"\r\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\r\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\r\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\r\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\r\n          }\r\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\r\n          ptrStr = ptrStrArr.join(\"+\")\r\n          if(dtypes[arrNum] === \"generic\") {\r\n            /*if(carg.lvalue) {\r\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\r\n              code = code.replace(re, localStr)\r\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\r\n            } else {\r\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\r\n            }*/\r\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\r\n          } else {\r\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\r\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\r\n          }\r\n        }\r\n      break\r\n      case \"scalar\":\r\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\r\n      break\r\n      case \"index\":\r\n        code = code.replace(re, \"index\")\r\n      break\r\n      case \"shape\":\r\n        code = code.replace(re, \"shape\")\r\n      break\r\n    }\r\n  }\r\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\r\n}\r\n\r\nfunction typeSummary(dtypes) {\r\n  var summary = new Array(dtypes.length)\r\n  var allEqual = true\r\n  for(var i=0; i<dtypes.length; ++i) {\r\n    var t = dtypes[i]\r\n    var digits = t.match(/\\d+/)\r\n    if(!digits) {\r\n      digits = \"\"\r\n    } else {\r\n      digits = digits[0]\r\n    }\r\n    if(t.charAt(0) === 0) {\r\n      summary[i] = \"u\" + t.charAt(1) + digits\r\n    } else {\r\n      summary[i] = t.charAt(0) + digits\r\n    }\r\n    if(i > 0) {\r\n      allEqual = allEqual && summary[i] === summary[i-1]\r\n    }\r\n  }\r\n  if(allEqual) {\r\n    return summary[0]\r\n  }\r\n  return summary.join(\"\")\r\n}\r\n\r\n//Generates a cwise operator\r\nfunction generateCWiseOp(proc, typesig) {\r\n\r\n  //Compute dimension\r\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\r\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\r\n  var orders = new Array(proc.arrayArgs.length)\r\n  var dtypes = new Array(proc.arrayArgs.length)\r\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n    dtypes[i] = typesig[2*i]\r\n    orders[i] = typesig[2*i+1]\r\n  }\r\n  \r\n  //Determine where block and loop indices start and end\r\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\r\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\r\n  var loopOrders = [] // orders restricted to the loop indices\r\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n    if (proc.arrayBlockIndices[i]<0) {\r\n      loopBegin.push(0)\r\n      loopEnd.push(dimension)\r\n      blockBegin.push(dimension)\r\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\r\n    } else {\r\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\r\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\r\n      blockBegin.push(0)\r\n      blockEnd.push(proc.arrayBlockIndices[i])\r\n    }\r\n    var newOrder = []\r\n    for(var j=0; j<orders[i].length; j++) {\r\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\r\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\r\n      }\r\n    }\r\n    loopOrders.push(newOrder)\r\n  }\r\n\r\n  //First create arguments for procedure\r\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\r\n  var code = [\"'use strict'\"]\r\n  var vars = []\r\n  \r\n  for(var j=0; j<dimension; ++j) {\r\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\r\n  }\r\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n    arglist.push(\"a\"+i) // Actual data array\r\n    arglist.push(\"t\"+i) // Strides\r\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\r\n    \r\n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\r\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\r\n    }\r\n    \r\n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\r\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\r\n    }\r\n  }\r\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n    arglist.push(\"Y\" + i)\r\n  }\r\n  if(proc.shapeArgs.length > 0) {\r\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\r\n  }\r\n  if(proc.indexArgs.length > 0) {\r\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\r\n    var zeros = new Array(dimension)\r\n    for(var i=0; i<dimension; ++i) {\r\n      zeros[i] = \"0\"\r\n    }\r\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\r\n  }\r\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\r\n    var off_arg = proc.offsetArgs[i]\r\n    var init_string = []\r\n    for(var j=0; j<off_arg.offset.length; ++j) {\r\n      if(off_arg.offset[j] === 0) {\r\n        continue\r\n      } else if(off_arg.offset[j] === 1) {\r\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \r\n      } else {\r\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\r\n      }\r\n    }\r\n    if(init_string.length === 0) {\r\n      vars.push(\"q\" + i + \"=0\")\r\n    } else {\r\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\r\n    }\r\n  }\r\n\r\n  //Prepare this variables\r\n  var thisVars = uniq([].concat(proc.pre.thisVars)\r\n                      .concat(proc.body.thisVars)\r\n                      .concat(proc.post.thisVars))\r\n  vars = vars.concat(thisVars)\r\n  code.push(\"var \" + vars.join(\",\"))\r\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n    code.push(\"p\"+i+\"|=0\")\r\n  }\r\n  \r\n  //Inline prelude\r\n  if(proc.pre.body.length > 3) {\r\n    code.push(processBlock(proc.pre, proc, dtypes))\r\n  }\r\n\r\n  //Process body\r\n  var body = processBlock(proc.body, proc, dtypes)\r\n  var matched = countMatches(loopOrders)\r\n  if(matched < dimension) {\r\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\r\n  } else {\r\n    code.push(innerFill(loopOrders[0], proc, body))\r\n  }\r\n\r\n  //Inline epilog\r\n  if(proc.post.body.length > 3) {\r\n    code.push(processBlock(proc.post, proc, dtypes))\r\n  }\r\n  \r\n  if(proc.debug) {\r\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n  }\r\n  \r\n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\r\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\r\n  return f()\r\n}\r\nmodule.exports = generateCWiseOp\r\n","\"use strict\"\r\n\r\n// The function below is called when constructing a cwise function object, and does the following:\r\n// A function object is constructed which accepts as argument a compilation function and returns another function.\r\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\r\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\r\n// The compilation passed to the first function object is used for compiling new functions.\r\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\r\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\r\n// So createThunk roughly works like this:\r\n// function createThunk(proc) {\r\n//   var thunk = function(compileBound) {\r\n//     var CACHED = {}\r\n//     return function(arrays and scalars) {\r\n//       if (dtype and order of arrays in CACHED) {\r\n//         var func = CACHED[dtype and order of arrays]\r\n//       } else {\r\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\r\n//       }\r\n//       return func(arrays and scalars)\r\n//     }\r\n//   }\r\n//   return thunk(compile.bind1(proc))\r\n// }\r\n\r\nvar compile = require(\"./compile.js\")\r\n\r\nfunction createThunk(proc) {\r\n  var code = [\"'use strict'\", \"var CACHED={}\"]\r\n  var vars = []\r\n  var thunkName = proc.funcName + \"_cwise_thunk\"\r\n  \r\n  //Build thunk\r\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\r\n  var typesig = []\r\n  var string_typesig = []\r\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\r\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\r\n  var shapeLengthConditions = [], shapeConditions = []\r\n  // Process array arguments\r\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\r\n    var j = proc.arrayArgs[i]\r\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\r\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\r\n    typesig.push(\"t\" + j)\r\n    typesig.push(\"r\" + j)\r\n    string_typesig.push(\"t\"+j)\r\n    string_typesig.push(\"r\"+j+\".join()\")\r\n    proc_args.push(\"array\" + j + \".data\")\r\n    proc_args.push(\"array\" + j + \".stride\")\r\n    proc_args.push(\"array\" + j + \".offset|0\")\r\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\r\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\r\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\r\n    }\r\n  }\r\n  // Check for shape equality\r\n  if (proc.arrayArgs.length > 1) {\r\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\r\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\r\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\r\n    code.push(\"}\")\r\n  }\r\n  // Process scalar arguments\r\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\r\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\r\n  }\r\n  // Check for cached function (and if not present, generate it)\r\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\r\n  vars.push(\"proc=CACHED[type]\")\r\n  code.push(\"var \" + vars.join(\",\"))\r\n  \r\n  code.push([\"if(!proc){\",\r\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\r\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\r\n\r\n  if(proc.debug) {\r\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\r\n  }\r\n  \r\n  //Compile thunk\r\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\r\n  return thunk(compile.bind(undefined, proc))\r\n}\r\n\r\nmodule.exports = createThunk\r\n","\"use strict\"\r\n\r\nvar createThunk = require(\"./lib/thunk.js\")\r\n\r\nfunction Procedure() {\r\n  this.argTypes = []\r\n  this.shimArgs = []\r\n  this.arrayArgs = []\r\n  this.arrayBlockIndices = []\r\n  this.scalarArgs = []\r\n  this.offsetArgs = []\r\n  this.offsetArgIndex = []\r\n  this.indexArgs = []\r\n  this.shapeArgs = []\r\n  this.funcName = \"\"\r\n  this.pre = null\r\n  this.body = null\r\n  this.post = null\r\n  this.debug = false\r\n}\r\n\r\nfunction compileCwise(user_args) {\r\n  //Create procedure\r\n  var proc = new Procedure()\r\n  \r\n  //Parse blocks\r\n  proc.pre    = user_args.pre\r\n  proc.body   = user_args.body\r\n  proc.post   = user_args.post\r\n\r\n  //Parse arguments\r\n  var proc_args = user_args.args.slice(0)\r\n  proc.argTypes = proc_args\r\n  for(var i=0; i<proc_args.length; ++i) {\r\n    var arg_type = proc_args[i]\r\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\r\n      proc.argTypes[i] = \"array\"\r\n      proc.arrayArgs.push(i)\r\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\r\n      proc.shimArgs.push(\"array\" + i)\r\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\r\n        throw new Error(\"cwise: pre() block may not reference array args\")\r\n      }\r\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\r\n        throw new Error(\"cwise: post() block may not reference array args\")\r\n      }\r\n    } else if(arg_type === \"scalar\") {\r\n      proc.scalarArgs.push(i)\r\n      proc.shimArgs.push(\"scalar\" + i)\r\n    } else if(arg_type === \"index\") {\r\n      proc.indexArgs.push(i)\r\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\r\n        throw new Error(\"cwise: pre() block may not reference array index\")\r\n      }\r\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n        throw new Error(\"cwise: body() block may not write to array index\")\r\n      }\r\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\r\n        throw new Error(\"cwise: post() block may not reference array index\")\r\n      }\r\n    } else if(arg_type === \"shape\") {\r\n      proc.shapeArgs.push(i)\r\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\r\n        throw new Error(\"cwise: pre() block may not write to array shape\")\r\n      }\r\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\r\n        throw new Error(\"cwise: body() block may not write to array shape\")\r\n      }\r\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\r\n        throw new Error(\"cwise: post() block may not write to array shape\")\r\n      }\r\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\r\n      proc.argTypes[i] = \"offset\"\r\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\r\n      proc.offsetArgIndex.push(i)\r\n    } else {\r\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\r\n    }\r\n  }\r\n  \r\n  //Make sure at least one array argument was specified\r\n  if(proc.arrayArgs.length <= 0) {\r\n    throw new Error(\"cwise: No array arguments specified\")\r\n  }\r\n  \r\n  //Make sure arguments are correct\r\n  if(proc.pre.args.length > proc_args.length) {\r\n    throw new Error(\"cwise: Too many arguments in pre() block\")\r\n  }\r\n  if(proc.body.args.length > proc_args.length) {\r\n    throw new Error(\"cwise: Too many arguments in body() block\")\r\n  }\r\n  if(proc.post.args.length > proc_args.length) {\r\n    throw new Error(\"cwise: Too many arguments in post() block\")\r\n  }\r\n\r\n  //Check debug flag\r\n  proc.debug = !!user_args.printCode || !!user_args.debug\r\n  \r\n  //Retrieve name\r\n  proc.funcName = user_args.funcName || \"cwise\"\r\n  \r\n  //Read in block size\r\n  proc.blockSize = user_args.blockSize || 64\r\n\r\n  return createThunk(proc)\r\n}\r\n\r\nmodule.exports = compileCwise\r\n","\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n","module.exports=require('cwise-compiler')({\"args\":[\"array\",\"scalar\",\"index\"],\"pre\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"body\":{\"body\":\"{\\nvar _inline_1_v=_inline_1_arg1_,_inline_1_i\\nfor(_inline_1_i=0;_inline_1_i<_inline_1_arg2_.length-1;++_inline_1_i) {\\n_inline_1_v=_inline_1_v[_inline_1_arg2_[_inline_1_i]]\\n}\\n_inline_1_arg0_=_inline_1_v[_inline_1_arg2_[_inline_1_arg2_.length-1]]\\n}\",\"args\":[{\"name\":\"_inline_1_arg0_\",\"lvalue\":true,\"rvalue\":false,\"count\":1},{\"name\":\"_inline_1_arg1_\",\"lvalue\":false,\"rvalue\":true,\"count\":1},{\"name\":\"_inline_1_arg2_\",\"lvalue\":false,\"rvalue\":true,\"count\":4}],\"thisVars\":[],\"localVars\":[\"_inline_1_i\",\"_inline_1_v\"]},\"post\":{\"body\":\"{}\",\"args\":[],\"thisVars\":[],\"localVars\":[]},\"funcName\":\"convert\",\"blockSize\":64})\n","\"use strict\"\n\nvar ndarray = require(\"ndarray\")\nvar do_convert = require(\"./doConvert.js\")\n\nmodule.exports = function convert(arr, result) {\n  var shape = [], c = arr, sz = 1\n  while(Array.isArray(c)) {\n    shape.push(c.length)\n    sz *= c.length\n    c = c[0]\n  }\n  if(shape.length === 0) {\n    return ndarray()\n  }\n  if(!result) {\n    result = ndarray(new Float64Array(sz), shape)\n  }\n  do_convert(result, arr)\n  return result\n}\n","\"use strict\"\n\nmodule.exports = generateMatrixProduct\n\nvar BLOCK_SIZE = 32\n\nfunction unpackOrder(order) {\n  return order === \"r\" ? [1,0] : [0,1]\n}\n\nfunction unpackShape(name, type) {\n  if(type[1] === \"native\") {\n    return [\n      name, \"d0=\", name, \".length,\",\n      name, \"d1=\", name, \"[0].length,\"\n    ].join(\"\")\n  } else {\n    return [\n      name, \"d0=\", name, \".shape[0],\",\n      name, \"d1=\", name, \".shape[1],\",\n      name, \"s0=\", name, \".stride[0],\",\n      name, \"s1=\", name, \".stride[1],\",\n      name, \"o=\", name, \".offset,\",\n      name, \"d=\", name, \".data,\"\n    ].join(\"\")\n  }\n}\n\nfunction start(order, name, type, i, j, w) {\n  var code = []\n  if(type[1] === \"native\") {\n    if(order[0]) {\n      if(i) {\n        code.push(\"var \", name, \"p=\", name, \"[\", i, \"];\")\n      } else {\n        code.push(\"var \", name, \"p=\", name, \"[0];\")\n      }\n    }\n  } else {\n    if(i && j) {\n      if(w) {\n        code.push(\n          \"var \", name, \"t0=\", name, \"s\", order[0], \",\",\n                  name, \"t1=\", name, \"s\", order[1], \"-\", name, \"s\", order[0], \"*\", w, \",\",\n                  name, \"p=\", name, \"o+\", i, \"*\", name, \"s0+\", j, \"*\", name, \"s1;\")\n      } else {\n        code.push(\n          \"var \", name, \"t0=\", name, \"s\", order[0], \",\",\n                  name, \"p=\", name, \"o+\", i, \"*\", name, \"s0+\", j, \"*\", name, \"s1;\")\n      }\n    } else if(i) {\n      code.push(\n        \"var \", name, \"t0=\", name, \"s\", order[0], \",\",\n                name, \"p=\", name, \"o+\", i, \"*\", name, \"s0;\")\n    } else if(j) {\n      code.push(\n        \"var \", name, \"t0=\", name, \"s\", order[0], \",\",\n                name, \"p=\", name, \"o+\", j, \"*\", name, \"s1;\")\n    } else  {\n      code.push(\n        \"var \", name, \"t0=\", name, \"s\", order[0], \",\",\n                name, \"t1=\", name, \"s\", order[1], \"-\", name, \"s\", order[0], \"*\", name, \"d\", order[0], \",\",\n                name, \"p=\", name, \"o;\")\n    }\n  }\n  return code\n}\n\nfunction walk(order, name, type, d, i) {\n  var code = []\n  if(type[1] === \"native\") {\n    if(order[0] && d === 1) {\n      code.push(name, \"p=\", name, \"[\", i, \"+1]\")\n    }\n  } else {\n    code.push(name, \"p+=\", name, \"t\", d, \";\")\n  }\n  return code\n}\n\nfunction write(order, name, type, i, j, w) {\n  var code = []\n  if(type[1] === \"native\") {\n    if(order[0]) {\n      code.push(name, \"p[\", j, \"]=\", w, \";\")\n    } else {\n      code.push(name, \"[\", i, \"][\", j, \"]=\", w, \";\")\n    }\n  } else if(type[1] === \"generic\") {\n    code.push(name, \"d.set(\", name, \"p,\", w, \");\")\n  } else {\n    code.push(name, \"d[\", name, \"p]=\", w, \";\")\n  }\n  return code\n}\n\nfunction read(order, name, type, i, j) {\n  var code = []\n  if(type[1] === \"native\") {\n    if(order[0]) {\n      code.push(name, \"p[\", j, \"]\")\n    } else {\n      code.push(name, \"[\", i, \"][\", j, \"]\")\n    }\n  } else if(type[1] === \"generic\") {\n    code.push(name, \"d.get(\", name, \"p)\")\n  } else {\n    code.push(name, \"d[\", name, \"p]\")\n  }\n  return code.join(\"\")\n}\n\nfunction generateRowColumnLoop(oType, aType, bType, useAlpha, useBeta) {\n  var code = []\n  var oOrd = oType[0] === \"r\" ? [1,0] : [0,1], aOrd = [1, 0], bOrd = [0, 1]\n  var symbols = [\"i\", \"j\"]\n\n  code.push.apply(code, start(oOrd, \"o\", oType))\n  \n  if(oOrd[1]) {\n    code.push(\"for(j=0;j<od1;++j){\")\n    code.push(\"for(i=0;i<od0;++i){\")\n  } else {\n    code.push(\"for(i=0;i<od0;++i){\")\n    code.push(\"for(j=0;j<od1;++j){\")\n  }\n\n  code.push.apply(code, start(aOrd, \"a\", aType, \"i\"))\n  code.push.apply(code, start(bOrd, \"b\", bType, undefined, \"j\"))\n\n  code.push(\n      \"var r=0.0;\",\n      \"for(k=0;k<ad1;++k){\",\n      \"r+=\", \n        read(aOrd, \"a\", aType, \"i\", \"k\"), \"*\", \n        read(bOrd, \"b\", bType, \"k\", \"j\"), \";\")\n\n  //Terminate k loop\n  code.push.apply(code, walk(aOrd, \"a\", aType, 0, \"k\"))\n  code.push.apply(code, walk(bOrd, \"b\", bType, 0, \"k\"))\n  code.push(\"}\")\n\n  //Write r to output\n  if(useAlpha) {\n    code.push(\"r*=A;\")\n  }\n  if(useBeta) {\n    code.push(\"r+=B*\", read(oOrd, \"o\", oType, \"i\", \"j\"), \";\")\n  }\n  code.push.apply(code, write(oOrd, \"o\", oType, \"i\", \"j\", \"r\"))\n  \n  //Terminate j loop loop\n  code.push.apply(code, walk(oOrd, \"o\", oType, 0, symbols[1]))\n  code.push(\"}\")\n\n  //Terminate i loop\n  code.push.apply(code, walk(oOrd, \"o\", oType, 1, symbols[0]))\n  code.push(\"}\")\n\n  return code\n}\n\nfunction generateBetaPass(oType, useBeta) {\n  var code = []\n  var oOrd = oType[0] === \"r\" ? [1,0] : [0,1], symbols\n  if(useBeta) {\n    code.push(\"if(B!==1.0){\")\n  }\n  code.push.apply(code, start(oOrd, \"o\", oType))\n  if(oOrd[0]) {\n    code.push(\"for(i=0;i<od0;++i){for(j=0;j<od1;++j){\")\n    symbols = [\"i\", \"j\"]\n  } else {\n    code.push(\"for(j=0;j<od1;++j){for(i=0;i<od0;++i){\")\n    symbols = [\"j\", \"i\"]\n  }\n  if(useBeta) {\n    code.push.apply(code, write(oOrd, \"o\", oType, \"i\", \"j\", \n      \"B*\"+read(oOrd, \"o\", oType, \"i\", \"j\")))\n  } else {\n    code.push.apply(code, write(oOrd, \"o\", oType, \"i\", \"j\", \"0\"))\n  }\n  code.push.apply(code, walk(oOrd, \"o\", oType, 0, symbols[1]))\n  code.push(\"}\")\n  code.push.apply(code, walk(oOrd, \"o\", oType, 1, symbols[0]))\n  code.push(\"}\")\n  if(useBeta) {\n    code.push(\"}\")\n  }\n  return code\n}\n\nfunction generateBlockLoop(oType, aType, bType, useAlpha, useBeta) {\n  var code = []\n  var shapes = [ \"od0\", \"od1\", \"ad1\" ]\n  var oOrd = [1, 0]\n  var aOrd = [1, 0]\n  var bOrd = [0, 1]\n\n  //Do pass over output to zero it out\n  code.push.apply(code, generateBetaPass(oType, useBeta))\n\n  for(var i=0; i<3; ++i) {\n    code.push(\n      \"for(var i\", i, \"=\", shapes[i], \";i\", i, \">0;){\",\n        \"var w\", i, \"=\", BLOCK_SIZE, \";\",\n        \"if(i\", i, \"<\", BLOCK_SIZE, \"){\",\n          \"w\", i, \"=i\", i, \";\",\n          \"i\", i, \"=0;\",\n        \"}else{\",\n          \"i\", i, \"-=\", BLOCK_SIZE, \";\",\n        \"}\")\n  }\n\n  code.push.apply(code, start(oOrd, \"o\", oType, \"i0\", \"i1\", \"w1\"))\n  \n  code.push(\"for(i=0;i<w0;++i){\\\nfor(j=0;j<w1;++j){\\\nvar r=0.0;\")\n\n  code.push.apply(code, start(aOrd, \"a\", aType, \"(i0+i)\", \"i2\"))\n  code.push.apply(code, start(bOrd, \"b\", bType, \"i2\", \"(i1+j)\"))\n\n  code.push(\"for(k=0;k<w2;++k){\")\n\n  code.push(\"r+=\",\n    read(aOrd, \"a\", aType, \"(i0+i)\", \"(i2+k)\"), \"*\", \n    read(bOrd, \"b\", bType, \"(i2+k)\", \"(i1+j)\"), \";\")\n\n  //Close off k-loop\n  code.push.apply(code, walk(aOrd, \"a\", aType, 0, \"(i2+k)\"))\n  code.push.apply(code, walk(bOrd, \"b\", bType, 0, \"(i2+k)\"))\n  code.push(\"}\")\n\n  //Write r back to output array\n  var sym = \"r\"\n  if(useAlpha) {\n    sym = \"A*r\"\n  }\n  code.push.apply(code, write(oOrd, \"o\", oType, \"(i0+i)\", \"(i1+j)\", \n    sym + \"+\" + read(oOrd, \"o\", oType, \"(i0+i)\", \"(i1+j)\")))\n\n  //Close off j-loop\n  code.push.apply(code, walk(oOrd, \"o\", oType, 0, \"(i1+j)\"))\n  code.push(\"}\")\n\n  //Close off i-loop\n  code.push.apply(code, walk(oOrd, \"o\", oType, 1, \"(i0+i)\"))\n  code.push(\"}}}}\")\n\n  return code\n}\n\nfunction generateMatrixProduct(outType, aType, bType, useAlpha, useBeta) {\n  var funcName = [\"gemm\", outType[0], outType[1], \n                     \"a\", aType[0], aType[1],\n                     \"b\", bType[0], bType[1],\n                     useAlpha ? \"alpha\" : \"\",\n                     useBeta ? \"beta\" : \"\" ].join(\"\")\n  var code = [\n    \"function \", funcName, \"(o,a,b,A,B){\",\n    \"var \", unpackShape(\"o\", outType), \n            unpackShape(\"a\", aType),\n            unpackShape(\"b\", bType),\n            \"i,j,k;\"\n  ]\n\n  if(aType[0] === \"r\" && bType[0] === \"c\") {\n    code.push.apply(code, generateRowColumnLoop(outType, aType, bType, useAlpha, useBeta))\n  } else {\n    code.push.apply(code, generateBlockLoop(outType, aType, bType, useAlpha, useBeta))\n  }\n\n  code.push(\"}return \", funcName)\n\n  //Compile function\n  var proc = new Function(code.join(\"\"))\n  return proc()\n}","\"use strict\"\n\nmodule.exports = matrixProduct\n\nvar generatePlan = require(\"./lib/planner.js\")\n\nfunction shape(arr) {\n  if(Array.isArray(arr)) {\n    return [ arr.length, arr[0].length ]\n  } else {\n    return arr.shape\n  }\n}\n\nfunction checkShapes(out, a, b) {\n  var os = shape(out)\n  var as = shape(a)\n  var bs = shape(b)\n  if(os[0] !== as[0] || os[1] !== bs[1] || as[1] !== bs[0]) {\n    throw new Error(\"Mismatched array shapes for matrix product\")\n  }\n}\n\nfunction classifyType(m) {\n  if(Array.isArray(m)) {\n    if(Array.isArray(m)) {\n      return [ \"r\", \"native\" ]\n    }\n  } else if(m.shape && (m.shape.length === 2)) {\n    if(m.order[0]) {\n      return [ \"r\", m.dtype ]\n    } else {\n      return [ \"c\", m.dtype ]\n    }\n  }\n  throw new Error(\"Unrecognized data type\")\n}\n\nvar CACHE = {}\n\nfunction matrixProduct(out, a, b, alpha, beta) {\n  if(alpha === undefined) {\n    alpha = 1.0\n  }\n  if(beta === undefined) {\n    beta = 0.0\n  }\n  var useAlpha = (alpha !== 1.0)\n  var useBeta  = (beta !== 0.0)\n  var outType  = classifyType(out)\n  var aType    = classifyType(a)\n  var bType    = classifyType(b)\n\n  checkShapes(out, a, b)\n\n  var typeSig  = [ outType, aType, bType, useAlpha, useBeta ].join(\":\")\n  var proc     = CACHE[typeSig]\n  if(!proc) {\n    proc = CACHE[typeSig] = generatePlan(outType, aType, bType, useAlpha, useBeta)\n  }\n  return proc(out, a, b, alpha, beta)\n}","'use strict'\n\nvar ndarray = require('ndarray')\n\nmodule.exports = pickDiagonal\n\nfunction pickDiagonal(M) {\n  var d = M.dimension\n  if(d <= 1) {\n    return M\n  }\n  var nshape  = (1<<30)\n  var nstride = 0\n  var mshape  = M.shape\n  var mstride = M.stride\n  for(var i=0; i<d; ++i) {\n    nshape   = Math.min(nshape, mshape[i])|0\n    nstride += mstride[i]\n  }\n  return ndarray(M.data, [nshape], [nstride], M.offset)\n}","\"use strict\"\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe","/*\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*jslint bitwise:true plusplus:true */\n/*global esprima:true, define:true, exports:true, window: true,\nthrowErrorTolerant: true,\nthrowError: true, generateStatement: true, peek: true,\nparseAssignmentExpression: true, parseBlock: true, parseExpression: true,\nparseFunctionDeclaration: true, parseFunctionExpression: true,\nparseFunctionSourceElements: true, parseVariableIdentifier: true,\nparseLeftHandSideExpression: true,\nparseUnaryExpression: true,\nparseStatement: true, parseSourceElement: true */\n\n(function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,\n    // Rhino, and plain browser loading.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== 'undefined') {\n        factory(exports);\n    } else {\n        factory((root.esprima = {}));\n    }\n}(this, function (exports) {\n    'use strict';\n\n    var Token,\n        TokenName,\n        FnExprTokens,\n        Syntax,\n        PropertyKind,\n        Messages,\n        Regex,\n        SyntaxTreeDelegate,\n        source,\n        strict,\n        index,\n        lineNumber,\n        lineStart,\n        length,\n        delegate,\n        lookahead,\n        state,\n        extra;\n\n    Token = {\n        BooleanLiteral: 1,\n        EOF: 2,\n        Identifier: 3,\n        Keyword: 4,\n        NullLiteral: 5,\n        NumericLiteral: 6,\n        Punctuator: 7,\n        StringLiteral: 8,\n        RegularExpression: 9\n    };\n\n    TokenName = {};\n    TokenName[Token.BooleanLiteral] = 'Boolean';\n    TokenName[Token.EOF] = '<end>';\n    TokenName[Token.Identifier] = 'Identifier';\n    TokenName[Token.Keyword] = 'Keyword';\n    TokenName[Token.NullLiteral] = 'Null';\n    TokenName[Token.NumericLiteral] = 'Numeric';\n    TokenName[Token.Punctuator] = 'Punctuator';\n    TokenName[Token.StringLiteral] = 'String';\n    TokenName[Token.RegularExpression] = 'RegularExpression';\n\n    // A function following one of those tokens is an expression.\n    FnExprTokens = ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',\n                    'return', 'case', 'delete', 'throw', 'void',\n                    // assignment operators\n                    '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=',\n                    '&=', '|=', '^=', ',',\n                    // binary/unary operators\n                    '+', '-', '*', '/', '%', '++', '--', '<<', '>>', '>>>', '&',\n                    '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',\n                    '<=', '<', '>', '!=', '!=='];\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        ArrayExpression: 'ArrayExpression',\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        Program: 'Program',\n        Property: 'Property',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement'\n    };\n\n    PropertyKind = {\n        Data: 1,\n        Get: 2,\n        Set: 4\n    };\n\n    // Error messages should be identical to V8.\n    Messages = {\n        UnexpectedToken:  'Unexpected token %0',\n        UnexpectedNumber:  'Unexpected number',\n        UnexpectedString:  'Unexpected string',\n        UnexpectedIdentifier:  'Unexpected identifier',\n        UnexpectedReserved:  'Unexpected reserved word',\n        UnexpectedEOS:  'Unexpected end of input',\n        NewlineAfterThrow:  'Illegal newline after throw',\n        InvalidRegExp: 'Invalid regular expression',\n        UnterminatedRegExp:  'Invalid regular expression: missing /',\n        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n        InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n        NoCatchOrFinally:  'Missing catch or finally after try',\n        UnknownLabel: 'Undefined label \\'%0\\'',\n        Redeclaration: '%0 \\'%1\\' has already been declared',\n        IllegalContinue: 'Illegal continue statement',\n        IllegalBreak: 'Illegal break statement',\n        IllegalReturn: 'Illegal return statement',\n        StrictModeWith:  'Strict mode code may not include a with statement',\n        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n        StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n        StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n        StrictReservedWord:  'Use of future reserved word in strict mode'\n    };\n\n    // See also tools/generate-unicode-regex.py.\n    Regex = {\n        NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n        NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n    };\n\n    // Ensure the condition is true, otherwise throw an error.\n    // This is only to have a better contract semantic, i.e. another safety net\n    // to catch a logic error. The condition shall be fulfilled in normal case.\n    // Do NOT use this to enforce a certain condition on any user input.\n\n    function assert(condition, message) {\n        /* istanbul ignore if */\n        if (!condition) {\n            throw new Error('ASSERT: ' + message);\n        }\n    }\n\n    function isDecimalDigit(ch) {\n        return (ch >= 48 && ch <= 57);   // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n    }\n\n    function isOctalDigit(ch) {\n        return '01234567'.indexOf(ch) >= 0;\n    }\n\n\n    // 7.2 White Space\n\n    function isWhiteSpace(ch) {\n        return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n            (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function isIdentifierStart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n    }\n\n    function isIdentifierPart(ch) {\n        return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n            (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n            (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n            (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n            (ch === 0x5C) ||                      // \\ (backslash)\n            ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n    }\n\n    // 7.6.1.2 Future Reserved Words\n\n    function isFutureReservedWord(id) {\n        switch (id) {\n        case 'class':\n        case 'enum':\n        case 'export':\n        case 'extends':\n        case 'import':\n        case 'super':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isStrictModeReservedWord(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'yield':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    // 7.6.1.1 Keywords\n\n    function isKeyword(id) {\n        if (strict && isStrictModeReservedWord(id)) {\n            return true;\n        }\n\n        // 'const' is specialized as Keyword in V8.\n        // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n        // Some others are from future reserved words.\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') ||\n                (id === 'try') || (id === 'let');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    // 7.4 Comments\n\n    function addComment(type, value, start, end, loc) {\n        var comment, attacher;\n\n        assert(typeof start === 'number', 'Comment must have valid position');\n\n        // Because the way the actual token is scanned, often the comments\n        // (if any) are skipped twice during the lexical analysis.\n        // Thus, we need to skip adding a comment if the comment array already\n        // handled it.\n        if (state.lastCommentStart >= start) {\n            return;\n        }\n        state.lastCommentStart = start;\n\n        comment = {\n            type: type,\n            value: value\n        };\n        if (extra.range) {\n            comment.range = [start, end];\n        }\n        if (extra.loc) {\n            comment.loc = loc;\n        }\n        extra.comments.push(comment);\n        if (extra.attachComment) {\n            extra.leadingComments.push(comment);\n            extra.trailingComments.push(comment);\n        }\n    }\n\n    function skipSingleLineComment(offset) {\n        var start, loc, ch, comment;\n\n        start = index - offset;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart - offset\n            }\n        };\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            ++index;\n            if (isLineTerminator(ch)) {\n                if (extra.comments) {\n                    comment = source.slice(start + offset, index - 1);\n                    loc.end = {\n                        line: lineNumber,\n                        column: index - lineStart - 1\n                    };\n                    addComment('Line', comment, start, index - 1, loc);\n                }\n                if (ch === 13 && source.charCodeAt(index) === 10) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                return;\n            }\n        }\n\n        if (extra.comments) {\n            comment = source.slice(start + offset, index);\n            loc.end = {\n                line: lineNumber,\n                column: index - lineStart\n            };\n            addComment('Line', comment, start, index, loc);\n        }\n    }\n\n    function skipMultiLineComment() {\n        var start, loc, ch, comment;\n\n        if (extra.comments) {\n            start = index - 2;\n            loc = {\n                start: {\n                    line: lineNumber,\n                    column: index - lineStart - 2\n                }\n            };\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (isLineTerminator(ch)) {\n                if (ch === 0x0D && source.charCodeAt(index + 1) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                ++index;\n                lineStart = index;\n                if (index >= length) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else if (ch === 0x2A) {\n                // Block comment ends with '*/'.\n                if (source.charCodeAt(index + 1) === 0x2F) {\n                    ++index;\n                    ++index;\n                    if (extra.comments) {\n                        comment = source.slice(start + 2, index - 2);\n                        loc.end = {\n                            line: lineNumber,\n                            column: index - lineStart\n                        };\n                        addComment('Block', comment, start, index, loc);\n                    }\n                    return;\n                }\n                ++index;\n            } else {\n                ++index;\n            }\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    function skipComment() {\n        var ch, start;\n\n        start = (index === 0);\n        while (index < length) {\n            ch = source.charCodeAt(index);\n\n            if (isWhiteSpace(ch)) {\n                ++index;\n            } else if (isLineTerminator(ch)) {\n                ++index;\n                if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                    ++index;\n                }\n                ++lineNumber;\n                lineStart = index;\n                start = true;\n            } else if (ch === 0x2F) { // U+002F is '/'\n                ch = source.charCodeAt(index + 1);\n                if (ch === 0x2F) {\n                    ++index;\n                    ++index;\n                    skipSingleLineComment(2);\n                    start = true;\n                } else if (ch === 0x2A) {  // U+002A is '*'\n                    ++index;\n                    ++index;\n                    skipMultiLineComment();\n                } else {\n                    break;\n                }\n            } else if (start && ch === 0x2D) { // U+002D is '-'\n                // U+003E is '>'\n                if ((source.charCodeAt(index + 1) === 0x2D) && (source.charCodeAt(index + 2) === 0x3E)) {\n                    // '-->' is a single-line comment\n                    index += 3;\n                    skipSingleLineComment(3);\n                } else {\n                    break;\n                }\n            } else if (ch === 0x3C) { // U+003C is '<'\n                if (source.slice(index + 1, index + 4) === '!--') {\n                    ++index; // `<`\n                    ++index; // `!`\n                    ++index; // `-`\n                    ++index; // `-`\n                    skipSingleLineComment(4);\n                } else {\n                    break;\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && isHexDigit(source[index])) {\n                ch = source[index++];\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function getEscapedIdentifier() {\n        var ch, id;\n\n        ch = source.charCodeAt(index++);\n        id = String.fromCharCode(ch);\n\n        // '\\u' (U+005C, U+0075) denotes an escaped character.\n        if (ch === 0x5C) {\n            if (source.charCodeAt(index) !== 0x75) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            ++index;\n            ch = scanHexEscape('u');\n            if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n            id = ch;\n        }\n\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (!isIdentifierPart(ch)) {\n                break;\n            }\n            ++index;\n            id += String.fromCharCode(ch);\n\n            // '\\u' (U+005C, U+0075) denotes an escaped character.\n            if (ch === 0x5C) {\n                id = id.substr(0, id.length - 1);\n                if (source.charCodeAt(index) !== 0x75) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                ++index;\n                ch = scanHexEscape('u');\n                if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n                id += ch;\n            }\n        }\n\n        return id;\n    }\n\n    function getIdentifier() {\n        var start, ch;\n\n        start = index++;\n        while (index < length) {\n            ch = source.charCodeAt(index);\n            if (ch === 0x5C) {\n                // Blackslash (U+005C) marks Unicode escape sequence.\n                index = start;\n                return getEscapedIdentifier();\n            }\n            if (isIdentifierPart(ch)) {\n                ++index;\n            } else {\n                break;\n            }\n        }\n\n        return source.slice(start, index);\n    }\n\n    function scanIdentifier() {\n        var start, id, type;\n\n        start = index;\n\n        // Backslash (U+005C) starts an escaped character.\n        id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n        // There is no keyword or literal with only one character.\n        // Thus, it must be an identifier.\n        if (id.length === 1) {\n            type = Token.Identifier;\n        } else if (isKeyword(id)) {\n            type = Token.Keyword;\n        } else if (id === 'null') {\n            type = Token.NullLiteral;\n        } else if (id === 'true' || id === 'false') {\n            type = Token.BooleanLiteral;\n        } else {\n            type = Token.Identifier;\n        }\n\n        return {\n            type: type,\n            value: id,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n\n    // 7.7 Punctuators\n\n    function scanPunctuator() {\n        var start = index,\n            code = source.charCodeAt(index),\n            code2,\n            ch1 = source[index],\n            ch2,\n            ch3,\n            ch4;\n\n        switch (code) {\n\n        // Check for most common single-character punctuators.\n        case 0x2E:  // . dot\n        case 0x28:  // ( open bracket\n        case 0x29:  // ) close bracket\n        case 0x3B:  // ; semicolon\n        case 0x2C:  // , comma\n        case 0x7B:  // { open curly brace\n        case 0x7D:  // } close curly brace\n        case 0x5B:  // [\n        case 0x5D:  // ]\n        case 0x3A:  // :\n        case 0x3F:  // ?\n        case 0x7E:  // ~\n            ++index;\n            if (extra.tokenize) {\n                if (code === 0x28) {\n                    extra.openParenToken = extra.tokens.length;\n                } else if (code === 0x7B) {\n                    extra.openCurlyToken = extra.tokens.length;\n                }\n            }\n            return {\n                type: Token.Punctuator,\n                value: String.fromCharCode(code),\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n\n        default:\n            code2 = source.charCodeAt(index + 1);\n\n            // '=' (U+003D) marks an assignment or comparison operator.\n            if (code2 === 0x3D) {\n                switch (code) {\n                case 0x2B:  // +\n                case 0x2D:  // -\n                case 0x2F:  // /\n                case 0x3C:  // <\n                case 0x3E:  // >\n                case 0x5E:  // ^\n                case 0x7C:  // |\n                case 0x25:  // %\n                case 0x26:  // &\n                case 0x2A:  // *\n                    index += 2;\n                    return {\n                        type: Token.Punctuator,\n                        value: String.fromCharCode(code) + String.fromCharCode(code2),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n\n                case 0x21: // !\n                case 0x3D: // =\n                    index += 2;\n\n                    // !== and ===\n                    if (source.charCodeAt(index) === 0x3D) {\n                        ++index;\n                    }\n                    return {\n                        type: Token.Punctuator,\n                        value: source.slice(start, index),\n                        lineNumber: lineNumber,\n                        lineStart: lineStart,\n                        start: start,\n                        end: index\n                    };\n                }\n            }\n        }\n\n        // 4-character punctuator: >>>=\n\n        ch4 = source.substr(index, 4);\n\n        if (ch4 === '>>>=') {\n            index += 4;\n            return {\n                type: Token.Punctuator,\n                value: ch4,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 3-character punctuators: === !== >>> <<= >>=\n\n        ch3 = ch4.substr(0, 3);\n\n        if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n            index += 3;\n            return {\n                type: Token.Punctuator,\n                value: ch3,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // Other 2-character punctuators: ++ -- << >> && ||\n        ch2 = ch3.substr(0, 2);\n\n        if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n            index += 2;\n            return {\n                type: Token.Punctuator,\n                value: ch2,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        // 1-character punctuators: < > = ! + - * % & | ^ /\n        if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n            ++index;\n            return {\n                type: Token.Punctuator,\n                value: ch1,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n    }\n\n    // 7.8.3 Numeric Literals\n\n    function scanHexLiteral(start) {\n        var number = '';\n\n        while (index < length) {\n            if (!isHexDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (number.length === 0) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt('0x' + number, 16),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function scanOctalLiteral(start) {\n        var number = '0' + source[index++];\n        while (index < length) {\n            if (!isOctalDigit(source[index])) {\n                break;\n            }\n            number += source[index++];\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseInt(number, 8),\n            octal: true,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function isImplicitOctalLiteral() {\n        var i, ch;\n\n        // Implicit octal, unless there is a non-octal digit.\n        // (Annex B.1.1 on Numeric Literals)\n        for (i = index + 1; i < length; ++i) {\n            ch = source[i];\n            if (ch === '8' || ch === '9') {\n                return false;\n            }\n            if (!isOctalDigit(ch)) {\n                return true;\n            }\n        }\n\n        return true;\n    }\n\n    function scanNumericLiteral() {\n        var number, start, ch;\n\n        ch = source[index];\n        assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n            'Numeric literal must start with a decimal digit or a decimal point');\n\n        start = index;\n        number = '';\n        if (ch !== '.') {\n            number = source[index++];\n            ch = source[index];\n\n            // Hex number starts with '0x'.\n            // Octal number starts with '0'.\n            if (number === '0') {\n                if (ch === 'x' || ch === 'X') {\n                    ++index;\n                    return scanHexLiteral(start);\n                }\n                if (isOctalDigit(ch)) {\n                    if (isImplicitOctalLiteral()) {\n                        return scanOctalLiteral(start);\n                    }\n                }\n            }\n\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === '.') {\n            number += source[index++];\n            while (isDecimalDigit(source.charCodeAt(index))) {\n                number += source[index++];\n            }\n            ch = source[index];\n        }\n\n        if (ch === 'e' || ch === 'E') {\n            number += source[index++];\n\n            ch = source[index];\n            if (ch === '+' || ch === '-') {\n                number += source[index++];\n            }\n            if (isDecimalDigit(source.charCodeAt(index))) {\n                while (isDecimalDigit(source.charCodeAt(index))) {\n                    number += source[index++];\n                }\n            } else {\n                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n            }\n        }\n\n        if (isIdentifierStart(source.charCodeAt(index))) {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.NumericLiteral,\n            value: parseFloat(number),\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    // 7.8.4 String Literals\n\n    function scanStringLiteral() {\n        var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n        startLineNumber = lineNumber;\n        startLineStart = lineStart;\n\n        quote = source[index];\n        assert((quote === '\\'' || quote === '\"'),\n            'String literal must starts with a quote');\n\n        start = index;\n        ++index;\n\n        while (index < length) {\n            ch = source[index++];\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = source[index++];\n                if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'u':\n                    case 'x':\n                        restore = index;\n                        unescaped = scanHexEscape(ch);\n                        if (unescaped) {\n                            str += unescaped;\n                        } else {\n                            index = restore;\n                            str += ch;\n                        }\n                        break;\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\x0B';\n                        break;\n\n                    default:\n                        if (isOctalDigit(ch)) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            if (code !== 0) {\n                                octal = true;\n                            }\n\n                            if (index < length && isOctalDigit(source[index])) {\n                                octal = true;\n                                code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        isOctalDigit(source[index])) {\n                                    code = code * 8 + '01234567'.indexOf(source[index++]);\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    ++lineNumber;\n                    if (ch ===  '\\r' && source[index] === '\\n') {\n                        ++index;\n                    }\n                    lineStart = index;\n                }\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n        }\n\n        return {\n            type: Token.StringLiteral,\n            value: str,\n            octal: octal,\n            startLineNumber: startLineNumber,\n            startLineStart: startLineStart,\n            lineNumber: lineNumber,\n            lineStart: lineStart,\n            start: start,\n            end: index\n        };\n    }\n\n    function testRegExp(pattern, flags) {\n        var value;\n        try {\n            value = new RegExp(pattern, flags);\n        } catch (e) {\n            throwError({}, Messages.InvalidRegExp);\n        }\n        return value;\n    }\n\n    function scanRegExpBody() {\n        var ch, str, classMarker, terminated, body;\n\n        ch = source[index];\n        assert(ch === '/', 'Regular expression literal must start with a slash');\n        str = source[index++];\n\n        classMarker = false;\n        terminated = false;\n        while (index < length) {\n            ch = source[index++];\n            str += ch;\n            if (ch === '\\\\') {\n                ch = source[index++];\n                // ECMA-262 7.8.5\n                if (isLineTerminator(ch.charCodeAt(0))) {\n                    throwError({}, Messages.UnterminatedRegExp);\n                }\n                str += ch;\n            } else if (isLineTerminator(ch.charCodeAt(0))) {\n                throwError({}, Messages.UnterminatedRegExp);\n            } else if (classMarker) {\n                if (ch === ']') {\n                    classMarker = false;\n                }\n            } else {\n                if (ch === '/') {\n                    terminated = true;\n                    break;\n                } else if (ch === '[') {\n                    classMarker = true;\n                }\n            }\n        }\n\n        if (!terminated) {\n            throwError({}, Messages.UnterminatedRegExp);\n        }\n\n        // Exclude leading and trailing slash.\n        body = str.substr(1, str.length - 2);\n        return {\n            value: body,\n            literal: str\n        };\n    }\n\n    function scanRegExpFlags() {\n        var ch, str, flags, restore;\n\n        str = '';\n        flags = '';\n        while (index < length) {\n            ch = source[index];\n            if (!isIdentifierPart(ch.charCodeAt(0))) {\n                break;\n            }\n\n            ++index;\n            if (ch === '\\\\' && index < length) {\n                ch = source[index];\n                if (ch === 'u') {\n                    ++index;\n                    restore = index;\n                    ch = scanHexEscape('u');\n                    if (ch) {\n                        flags += ch;\n                        for (str += '\\\\u'; restore < index; ++restore) {\n                            str += source[restore];\n                        }\n                    } else {\n                        index = restore;\n                        flags += 'u';\n                        str += '\\\\u';\n                    }\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                } else {\n                    str += '\\\\';\n                    throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n                }\n            } else {\n                flags += ch;\n                str += ch;\n            }\n        }\n\n        return {\n            value: flags,\n            literal: str\n        };\n    }\n\n    function scanRegExp() {\n        var start, body, flags, pattern, value;\n\n        lookahead = null;\n        skipComment();\n        start = index;\n\n        body = scanRegExpBody();\n        flags = scanRegExpFlags();\n        value = testRegExp(body.value, flags.value);\n\n        if (extra.tokenize) {\n            return {\n                type: Token.RegularExpression,\n                value: value,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: start,\n                end: index\n            };\n        }\n\n        return {\n            literal: body.literal + flags.literal,\n            value: value,\n            start: start,\n            end: index\n        };\n    }\n\n    function collectRegex() {\n        var pos, loc, regex, token;\n\n        skipComment();\n\n        pos = index;\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        regex = scanRegExp();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        /* istanbul ignore next */\n        if (!extra.tokenize) {\n            // Pop the previous token, which is likely '/' or '/='\n            if (extra.tokens.length > 0) {\n                token = extra.tokens[extra.tokens.length - 1];\n                if (token.range[0] === pos && token.type === 'Punctuator') {\n                    if (token.value === '/' || token.value === '/=') {\n                        extra.tokens.pop();\n                    }\n                }\n            }\n\n            extra.tokens.push({\n                type: 'RegularExpression',\n                value: regex.literal,\n                range: [pos, index],\n                loc: loc\n            });\n        }\n\n        return regex;\n    }\n\n    function isIdentifierName(token) {\n        return token.type === Token.Identifier ||\n            token.type === Token.Keyword ||\n            token.type === Token.BooleanLiteral ||\n            token.type === Token.NullLiteral;\n    }\n\n    function advanceSlash() {\n        var prevToken,\n            checkToken;\n        // Using the following algorithm:\n        // https://github.com/mozilla/sweet.js/wiki/design\n        prevToken = extra.tokens[extra.tokens.length - 1];\n        if (!prevToken) {\n            // Nothing before that: it cannot be a division.\n            return collectRegex();\n        }\n        if (prevToken.type === 'Punctuator') {\n            if (prevToken.value === ']') {\n                return scanPunctuator();\n            }\n            if (prevToken.value === ')') {\n                checkToken = extra.tokens[extra.openParenToken - 1];\n                if (checkToken &&\n                        checkToken.type === 'Keyword' &&\n                        (checkToken.value === 'if' ||\n                         checkToken.value === 'while' ||\n                         checkToken.value === 'for' ||\n                         checkToken.value === 'with')) {\n                    return collectRegex();\n                }\n                return scanPunctuator();\n            }\n            if (prevToken.value === '}') {\n                // Dividing a function by anything makes little sense,\n                // but we have to check for that.\n                if (extra.tokens[extra.openCurlyToken - 3] &&\n                        extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                    // Anonymous function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 4];\n                    if (!checkToken) {\n                        return scanPunctuator();\n                    }\n                } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                        extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                    // Named function.\n                    checkToken = extra.tokens[extra.openCurlyToken - 5];\n                    if (!checkToken) {\n                        return collectRegex();\n                    }\n                } else {\n                    return scanPunctuator();\n                }\n                // checkToken determines whether the function is\n                // a declaration or an expression.\n                if (FnExprTokens.indexOf(checkToken.value) >= 0) {\n                    // It is an expression.\n                    return scanPunctuator();\n                }\n                // It is a declaration.\n                return collectRegex();\n            }\n            return collectRegex();\n        }\n        if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n            return collectRegex();\n        }\n        return scanPunctuator();\n    }\n\n    function advance() {\n        var ch;\n\n        skipComment();\n\n        if (index >= length) {\n            return {\n                type: Token.EOF,\n                lineNumber: lineNumber,\n                lineStart: lineStart,\n                start: index,\n                end: index\n            };\n        }\n\n        ch = source.charCodeAt(index);\n\n        if (isIdentifierStart(ch)) {\n            return scanIdentifier();\n        }\n\n        // Very common: ( and ) and ;\n        if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n            return scanPunctuator();\n        }\n\n        // String literal starts with single quote (U+0027) or double quote (U+0022).\n        if (ch === 0x27 || ch === 0x22) {\n            return scanStringLiteral();\n        }\n\n\n        // Dot (.) U+002E can also start a floating-point number, hence the need\n        // to check the next character.\n        if (ch === 0x2E) {\n            if (isDecimalDigit(source.charCodeAt(index + 1))) {\n                return scanNumericLiteral();\n            }\n            return scanPunctuator();\n        }\n\n        if (isDecimalDigit(ch)) {\n            return scanNumericLiteral();\n        }\n\n        // Slash (/) U+002F can also start a regex.\n        if (extra.tokenize && ch === 0x2F) {\n            return advanceSlash();\n        }\n\n        return scanPunctuator();\n    }\n\n    function collectToken() {\n        var loc, token, range, value;\n\n        skipComment();\n        loc = {\n            start: {\n                line: lineNumber,\n                column: index - lineStart\n            }\n        };\n\n        token = advance();\n        loc.end = {\n            line: lineNumber,\n            column: index - lineStart\n        };\n\n        if (token.type !== Token.EOF) {\n            value = source.slice(token.start, token.end);\n            extra.tokens.push({\n                type: TokenName[token.type],\n                value: value,\n                range: [token.start, token.end],\n                loc: loc\n            });\n        }\n\n        return token;\n    }\n\n    function lex() {\n        var token;\n\n        token = lookahead;\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n        index = token.end;\n        lineNumber = token.lineNumber;\n        lineStart = token.lineStart;\n\n        return token;\n    }\n\n    function peek() {\n        var pos, line, start;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n    }\n\n    function Position(line, column) {\n        this.line = line;\n        this.column = column;\n    }\n\n    function SourceLocation(startLine, startColumn, line, column) {\n        this.start = new Position(startLine, startColumn);\n        this.end = new Position(line, column);\n    }\n\n    SyntaxTreeDelegate = {\n\n        name: 'SyntaxTree',\n\n        processComment: function (node) {\n            var lastChild, trailingComments;\n\n            if (node.type === Syntax.Program) {\n                if (node.body.length > 0) {\n                    return;\n                }\n            }\n\n            if (extra.trailingComments.length > 0) {\n                if (extra.trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.trailingComments;\n                    extra.trailingComments = [];\n                } else {\n                    extra.trailingComments.length = 0;\n                }\n            } else {\n                if (extra.bottomRightStack.length > 0 &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments &&\n                        extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments[0].range[0] >= node.range[1]) {\n                    trailingComments = extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                    delete extra.bottomRightStack[extra.bottomRightStack.length - 1].trailingComments;\n                }\n            }\n\n            // Eating the stack.\n            while (extra.bottomRightStack.length > 0 && extra.bottomRightStack[extra.bottomRightStack.length - 1].range[0] >= node.range[0]) {\n                lastChild = extra.bottomRightStack.pop();\n            }\n\n            if (lastChild) {\n                if (lastChild.leadingComments && lastChild.leadingComments[lastChild.leadingComments.length - 1].range[1] <= node.range[0]) {\n                    node.leadingComments = lastChild.leadingComments;\n                    delete lastChild.leadingComments;\n                }\n            } else if (extra.leadingComments.length > 0 && extra.leadingComments[extra.leadingComments.length - 1].range[1] <= node.range[0]) {\n                node.leadingComments = extra.leadingComments;\n                extra.leadingComments = [];\n            }\n\n\n            if (trailingComments) {\n                node.trailingComments = trailingComments;\n            }\n\n            extra.bottomRightStack.push(node);\n        },\n\n        markEnd: function (node, startToken) {\n            if (extra.range) {\n                node.range = [startToken.start, index];\n            }\n            if (extra.loc) {\n                node.loc = new SourceLocation(\n                    startToken.startLineNumber === undefined ?  startToken.lineNumber : startToken.startLineNumber,\n                    startToken.start - (startToken.startLineStart === undefined ?  startToken.lineStart : startToken.startLineStart),\n                    lineNumber,\n                    index - lineStart\n                );\n                this.postProcess(node);\n            }\n\n            if (extra.attachComment) {\n                this.processComment(node);\n            }\n            return node;\n        },\n\n        postProcess: function (node) {\n            if (extra.source) {\n                node.loc.source = extra.source;\n            }\n            return node;\n        },\n\n        createArrayExpression: function (elements) {\n            return {\n                type: Syntax.ArrayExpression,\n                elements: elements\n            };\n        },\n\n        createAssignmentExpression: function (operator, left, right) {\n            return {\n                type: Syntax.AssignmentExpression,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBinaryExpression: function (operator, left, right) {\n            var type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression :\n                        Syntax.BinaryExpression;\n            return {\n                type: type,\n                operator: operator,\n                left: left,\n                right: right\n            };\n        },\n\n        createBlockStatement: function (body) {\n            return {\n                type: Syntax.BlockStatement,\n                body: body\n            };\n        },\n\n        createBreakStatement: function (label) {\n            return {\n                type: Syntax.BreakStatement,\n                label: label\n            };\n        },\n\n        createCallExpression: function (callee, args) {\n            return {\n                type: Syntax.CallExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createCatchClause: function (param, body) {\n            return {\n                type: Syntax.CatchClause,\n                param: param,\n                body: body\n            };\n        },\n\n        createConditionalExpression: function (test, consequent, alternate) {\n            return {\n                type: Syntax.ConditionalExpression,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createContinueStatement: function (label) {\n            return {\n                type: Syntax.ContinueStatement,\n                label: label\n            };\n        },\n\n        createDebuggerStatement: function () {\n            return {\n                type: Syntax.DebuggerStatement\n            };\n        },\n\n        createDoWhileStatement: function (body, test) {\n            return {\n                type: Syntax.DoWhileStatement,\n                body: body,\n                test: test\n            };\n        },\n\n        createEmptyStatement: function () {\n            return {\n                type: Syntax.EmptyStatement\n            };\n        },\n\n        createExpressionStatement: function (expression) {\n            return {\n                type: Syntax.ExpressionStatement,\n                expression: expression\n            };\n        },\n\n        createForStatement: function (init, test, update, body) {\n            return {\n                type: Syntax.ForStatement,\n                init: init,\n                test: test,\n                update: update,\n                body: body\n            };\n        },\n\n        createForInStatement: function (left, right, body) {\n            return {\n                type: Syntax.ForInStatement,\n                left: left,\n                right: right,\n                body: body,\n                each: false\n            };\n        },\n\n        createFunctionDeclaration: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionDeclaration,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createFunctionExpression: function (id, params, defaults, body) {\n            return {\n                type: Syntax.FunctionExpression,\n                id: id,\n                params: params,\n                defaults: defaults,\n                body: body,\n                rest: null,\n                generator: false,\n                expression: false\n            };\n        },\n\n        createIdentifier: function (name) {\n            return {\n                type: Syntax.Identifier,\n                name: name\n            };\n        },\n\n        createIfStatement: function (test, consequent, alternate) {\n            return {\n                type: Syntax.IfStatement,\n                test: test,\n                consequent: consequent,\n                alternate: alternate\n            };\n        },\n\n        createLabeledStatement: function (label, body) {\n            return {\n                type: Syntax.LabeledStatement,\n                label: label,\n                body: body\n            };\n        },\n\n        createLiteral: function (token) {\n            return {\n                type: Syntax.Literal,\n                value: token.value,\n                raw: source.slice(token.start, token.end)\n            };\n        },\n\n        createMemberExpression: function (accessor, object, property) {\n            return {\n                type: Syntax.MemberExpression,\n                computed: accessor === '[',\n                object: object,\n                property: property\n            };\n        },\n\n        createNewExpression: function (callee, args) {\n            return {\n                type: Syntax.NewExpression,\n                callee: callee,\n                'arguments': args\n            };\n        },\n\n        createObjectExpression: function (properties) {\n            return {\n                type: Syntax.ObjectExpression,\n                properties: properties\n            };\n        },\n\n        createPostfixExpression: function (operator, argument) {\n            return {\n                type: Syntax.UpdateExpression,\n                operator: operator,\n                argument: argument,\n                prefix: false\n            };\n        },\n\n        createProgram: function (body) {\n            return {\n                type: Syntax.Program,\n                body: body\n            };\n        },\n\n        createProperty: function (kind, key, value) {\n            return {\n                type: Syntax.Property,\n                key: key,\n                value: value,\n                kind: kind\n            };\n        },\n\n        createReturnStatement: function (argument) {\n            return {\n                type: Syntax.ReturnStatement,\n                argument: argument\n            };\n        },\n\n        createSequenceExpression: function (expressions) {\n            return {\n                type: Syntax.SequenceExpression,\n                expressions: expressions\n            };\n        },\n\n        createSwitchCase: function (test, consequent) {\n            return {\n                type: Syntax.SwitchCase,\n                test: test,\n                consequent: consequent\n            };\n        },\n\n        createSwitchStatement: function (discriminant, cases) {\n            return {\n                type: Syntax.SwitchStatement,\n                discriminant: discriminant,\n                cases: cases\n            };\n        },\n\n        createThisExpression: function () {\n            return {\n                type: Syntax.ThisExpression\n            };\n        },\n\n        createThrowStatement: function (argument) {\n            return {\n                type: Syntax.ThrowStatement,\n                argument: argument\n            };\n        },\n\n        createTryStatement: function (block, guardedHandlers, handlers, finalizer) {\n            return {\n                type: Syntax.TryStatement,\n                block: block,\n                guardedHandlers: guardedHandlers,\n                handlers: handlers,\n                finalizer: finalizer\n            };\n        },\n\n        createUnaryExpression: function (operator, argument) {\n            if (operator === '++' || operator === '--') {\n                return {\n                    type: Syntax.UpdateExpression,\n                    operator: operator,\n                    argument: argument,\n                    prefix: true\n                };\n            }\n            return {\n                type: Syntax.UnaryExpression,\n                operator: operator,\n                argument: argument,\n                prefix: true\n            };\n        },\n\n        createVariableDeclaration: function (declarations, kind) {\n            return {\n                type: Syntax.VariableDeclaration,\n                declarations: declarations,\n                kind: kind\n            };\n        },\n\n        createVariableDeclarator: function (id, init) {\n            return {\n                type: Syntax.VariableDeclarator,\n                id: id,\n                init: init\n            };\n        },\n\n        createWhileStatement: function (test, body) {\n            return {\n                type: Syntax.WhileStatement,\n                test: test,\n                body: body\n            };\n        },\n\n        createWithStatement: function (object, body) {\n            return {\n                type: Syntax.WithStatement,\n                object: object,\n                body: body\n            };\n        }\n    };\n\n    // Return true if there is a line terminator before the next token.\n\n    function peekLineTerminator() {\n        var pos, line, start, found;\n\n        pos = index;\n        line = lineNumber;\n        start = lineStart;\n        skipComment();\n        found = lineNumber !== line;\n        index = pos;\n        lineNumber = line;\n        lineStart = start;\n\n        return found;\n    }\n\n    // Throw an exception\n\n    function throwError(token, messageFormat) {\n        var error,\n            args = Array.prototype.slice.call(arguments, 2),\n            msg = messageFormat.replace(\n                /%(\\d)/g,\n                function (whole, index) {\n                    assert(index < args.length, 'Message reference must be in range');\n                    return args[index];\n                }\n            );\n\n        if (typeof token.lineNumber === 'number') {\n            error = new Error('Line ' + token.lineNumber + ': ' + msg);\n            error.index = token.start;\n            error.lineNumber = token.lineNumber;\n            error.column = token.start - lineStart + 1;\n        } else {\n            error = new Error('Line ' + lineNumber + ': ' + msg);\n            error.index = index;\n            error.lineNumber = lineNumber;\n            error.column = index - lineStart + 1;\n        }\n\n        error.description = msg;\n        throw error;\n    }\n\n    function throwErrorTolerant() {\n        try {\n            throwError.apply(null, arguments);\n        } catch (e) {\n            if (extra.errors) {\n                extra.errors.push(e);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n\n    // Throw an exception because of the token.\n\n    function throwUnexpected(token) {\n        if (token.type === Token.EOF) {\n            throwError(token, Messages.UnexpectedEOS);\n        }\n\n        if (token.type === Token.NumericLiteral) {\n            throwError(token, Messages.UnexpectedNumber);\n        }\n\n        if (token.type === Token.StringLiteral) {\n            throwError(token, Messages.UnexpectedString);\n        }\n\n        if (token.type === Token.Identifier) {\n            throwError(token, Messages.UnexpectedIdentifier);\n        }\n\n        if (token.type === Token.Keyword) {\n            if (isFutureReservedWord(token.value)) {\n                throwError(token, Messages.UnexpectedReserved);\n            } else if (strict && isStrictModeReservedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictReservedWord);\n                return;\n            }\n            throwError(token, Messages.UnexpectedToken, token.value);\n        }\n\n        // BooleanLiteral, NullLiteral, or Punctuator.\n        throwError(token, Messages.UnexpectedToken, token.value);\n    }\n\n    // Expect the next token to match the specified punctuator.\n    // If not, an exception will be thrown.\n\n    function expect(value) {\n        var token = lex();\n        if (token.type !== Token.Punctuator || token.value !== value) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Expect the next token to match the specified keyword.\n    // If not, an exception will be thrown.\n\n    function expectKeyword(keyword) {\n        var token = lex();\n        if (token.type !== Token.Keyword || token.value !== keyword) {\n            throwUnexpected(token);\n        }\n    }\n\n    // Return true if the next token matches the specified punctuator.\n\n    function match(value) {\n        return lookahead.type === Token.Punctuator && lookahead.value === value;\n    }\n\n    // Return true if the next token matches the specified keyword\n\n    function matchKeyword(keyword) {\n        return lookahead.type === Token.Keyword && lookahead.value === keyword;\n    }\n\n    // Return true if the next token is an assignment operator\n\n    function matchAssign() {\n        var op;\n\n        if (lookahead.type !== Token.Punctuator) {\n            return false;\n        }\n        op = lookahead.value;\n        return op === '=' ||\n            op === '*=' ||\n            op === '/=' ||\n            op === '%=' ||\n            op === '+=' ||\n            op === '-=' ||\n            op === '<<=' ||\n            op === '>>=' ||\n            op === '>>>=' ||\n            op === '&=' ||\n            op === '^=' ||\n            op === '|=';\n    }\n\n    function consumeSemicolon() {\n        var line, oldIndex = index, oldLineNumber = lineNumber,\n            oldLineStart = lineStart, oldLookahead = lookahead;\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B || match(';')) {\n            lex();\n            return;\n        }\n\n        line = lineNumber;\n        skipComment();\n        if (lineNumber !== line) {\n            index = oldIndex;\n            lineNumber = oldLineNumber;\n            lineStart = oldLineStart;\n            lookahead = oldLookahead;\n            return;\n        }\n\n        if (lookahead.type !== Token.EOF && !match('}')) {\n            throwUnexpected(lookahead);\n        }\n    }\n\n    // Return true if provided expression is LeftHandSideExpression\n\n    function isLeftHandSide(expr) {\n        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;\n    }\n\n    // 11.1.4 Array Initialiser\n\n    function parseArrayInitialiser() {\n        var elements = [], startToken;\n\n        startToken = lookahead;\n        expect('[');\n\n        while (!match(']')) {\n            if (match(',')) {\n                lex();\n                elements.push(null);\n            } else {\n                elements.push(parseAssignmentExpression());\n\n                if (!match(']')) {\n                    expect(',');\n                }\n            }\n        }\n\n        lex();\n\n        return delegate.markEnd(delegate.createArrayExpression(elements), startToken);\n    }\n\n    // 11.1.5 Object Initialiser\n\n    function parsePropertyFunction(param, first) {\n        var previousStrict, body, startToken;\n\n        previousStrict = strict;\n        startToken = lookahead;\n        body = parseFunctionSourceElements();\n        if (first && strict && isRestrictedWord(param[0].name)) {\n            throwErrorTolerant(first, Messages.StrictParamName);\n        }\n        strict = previousStrict;\n        return delegate.markEnd(delegate.createFunctionExpression(null, param, [], body), startToken);\n    }\n\n    function parseObjectPropertyKey() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        // Note: This function is called only from parseObjectProperty(), where\n        // EOF and Punctuator tokens are already filtered out.\n\n        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n            if (strict && token.octal) {\n                throwErrorTolerant(token, Messages.StrictOctalLiteral);\n            }\n            return delegate.markEnd(delegate.createLiteral(token), startToken);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseObjectProperty() {\n        var token, key, id, value, param, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        if (token.type === Token.Identifier) {\n\n            id = parseObjectPropertyKey();\n\n            // Property Assignment: Getter and Setter.\n\n            if (token.value === 'get' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                expect(')');\n                value = parsePropertyFunction([]);\n                return delegate.markEnd(delegate.createProperty('get', key, value), startToken);\n            }\n            if (token.value === 'set' && !match(':')) {\n                key = parseObjectPropertyKey();\n                expect('(');\n                token = lookahead;\n                if (token.type !== Token.Identifier) {\n                    expect(')');\n                    throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n                    value = parsePropertyFunction([]);\n                } else {\n                    param = [ parseVariableIdentifier() ];\n                    expect(')');\n                    value = parsePropertyFunction(param, token);\n                }\n                return delegate.markEnd(delegate.createProperty('set', key, value), startToken);\n            }\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', id, value), startToken);\n        }\n        if (token.type === Token.EOF || token.type === Token.Punctuator) {\n            throwUnexpected(token);\n        } else {\n            key = parseObjectPropertyKey();\n            expect(':');\n            value = parseAssignmentExpression();\n            return delegate.markEnd(delegate.createProperty('init', key, value), startToken);\n        }\n    }\n\n    function parseObjectInitialiser() {\n        var properties = [], property, name, key, kind, map = {}, toString = String, startToken;\n\n        startToken = lookahead;\n\n        expect('{');\n\n        while (!match('}')) {\n            property = parseObjectProperty();\n\n            if (property.key.type === Syntax.Identifier) {\n                name = property.key.name;\n            } else {\n                name = toString(property.key.value);\n            }\n            kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n            key = '$' + name;\n            if (Object.prototype.hasOwnProperty.call(map, key)) {\n                if (map[key] === PropertyKind.Data) {\n                    if (strict && kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                    } else if (kind !== PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    }\n                } else {\n                    if (kind === PropertyKind.Data) {\n                        throwErrorTolerant({}, Messages.AccessorDataProperty);\n                    } else if (map[key] & kind) {\n                        throwErrorTolerant({}, Messages.AccessorGetSet);\n                    }\n                }\n                map[key] |= kind;\n            } else {\n                map[key] = kind;\n            }\n\n            properties.push(property);\n\n            if (!match('}')) {\n                expect(',');\n            }\n        }\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createObjectExpression(properties), startToken);\n    }\n\n    // 11.1.6 The Grouping Operator\n\n    function parseGroupExpression() {\n        var expr;\n\n        expect('(');\n\n        expr = parseExpression();\n\n        expect(')');\n\n        return expr;\n    }\n\n\n    // 11.1 Primary Expressions\n\n    function parsePrimaryExpression() {\n        var type, token, expr, startToken;\n\n        if (match('(')) {\n            return parseGroupExpression();\n        }\n\n        if (match('[')) {\n            return parseArrayInitialiser();\n        }\n\n        if (match('{')) {\n            return parseObjectInitialiser();\n        }\n\n        type = lookahead.type;\n        startToken = lookahead;\n\n        if (type === Token.Identifier) {\n            expr =  delegate.createIdentifier(lex().value);\n        } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n            if (strict && lookahead.octal) {\n                throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n            }\n            expr = delegate.createLiteral(lex());\n        } else if (type === Token.Keyword) {\n            if (matchKeyword('function')) {\n                return parseFunctionExpression();\n            }\n            if (matchKeyword('this')) {\n                lex();\n                expr = delegate.createThisExpression();\n            } else {\n                throwUnexpected(lex());\n            }\n        } else if (type === Token.BooleanLiteral) {\n            token = lex();\n            token.value = (token.value === 'true');\n            expr = delegate.createLiteral(token);\n        } else if (type === Token.NullLiteral) {\n            token = lex();\n            token.value = null;\n            expr = delegate.createLiteral(token);\n        } else if (match('/') || match('/=')) {\n            if (typeof extra.tokens !== 'undefined') {\n                expr = delegate.createLiteral(collectRegex());\n            } else {\n                expr = delegate.createLiteral(scanRegExp());\n            }\n            peek();\n        } else {\n            throwUnexpected(lex());\n        }\n\n        return delegate.markEnd(expr, startToken);\n    }\n\n    // 11.2 Left-Hand-Side Expressions\n\n    function parseArguments() {\n        var args = [];\n\n        expect('(');\n\n        if (!match(')')) {\n            while (index < length) {\n                args.push(parseAssignmentExpression());\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return args;\n    }\n\n    function parseNonComputedProperty() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (!isIdentifierName(token)) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseNonComputedMember() {\n        expect('.');\n\n        return parseNonComputedProperty();\n    }\n\n    function parseComputedMember() {\n        var expr;\n\n        expect('[');\n\n        expr = parseExpression();\n\n        expect(']');\n\n        return expr;\n    }\n\n    function parseNewExpression() {\n        var callee, args, startToken;\n\n        startToken = lookahead;\n        expectKeyword('new');\n        callee = parseLeftHandSideExpression();\n        args = match('(') ? parseArguments() : [];\n\n        return delegate.markEnd(delegate.createNewExpression(callee, args), startToken);\n    }\n\n    function parseLeftHandSideExpressionAllowCall() {\n        var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n        startToken = lookahead;\n        state.allowIn = true;\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        for (;;) {\n            if (match('.')) {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            } else if (match('(')) {\n                args = parseArguments();\n                expr = delegate.createCallExpression(expr, args);\n            } else if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                break;\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        state.allowIn = previousAllowIn;\n\n        return expr;\n    }\n\n    function parseLeftHandSideExpression() {\n        var expr, property, startToken;\n        assert(state.allowIn, 'callee of new expression always allow in keyword.');\n\n        startToken = lookahead;\n\n        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();\n\n        while (match('.') || match('[')) {\n            if (match('[')) {\n                property = parseComputedMember();\n                expr = delegate.createMemberExpression('[', expr, property);\n            } else {\n                property = parseNonComputedMember();\n                expr = delegate.createMemberExpression('.', expr, property);\n            }\n            delegate.markEnd(expr, startToken);\n        }\n        return expr;\n    }\n\n    // 11.3 Postfix Expressions\n\n    function parsePostfixExpression() {\n        var expr, token, startToken = lookahead;\n\n        expr = parseLeftHandSideExpressionAllowCall();\n\n        if (lookahead.type === Token.Punctuator) {\n            if ((match('++') || match('--')) && !peekLineTerminator()) {\n                // 11.3.1, 11.3.2\n                if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                    throwErrorTolerant({}, Messages.StrictLHSPostfix);\n                }\n\n                if (!isLeftHandSide(expr)) {\n                    throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n                }\n\n                token = lex();\n                expr = delegate.markEnd(delegate.createPostfixExpression(token.value, expr), startToken);\n            }\n        }\n\n        return expr;\n    }\n\n    // 11.4 Unary Operators\n\n    function parseUnaryExpression() {\n        var token, expr, startToken;\n\n        if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n            expr = parsePostfixExpression();\n        } else if (match('++') || match('--')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            // 11.4.4, 11.4.5\n            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {\n                throwErrorTolerant({}, Messages.StrictLHSPrefix);\n            }\n\n            if (!isLeftHandSide(expr)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (match('+') || match('-') || match('~') || match('!')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n        } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n            startToken = lookahead;\n            token = lex();\n            expr = parseUnaryExpression();\n            expr = delegate.createUnaryExpression(token.value, expr);\n            expr = delegate.markEnd(expr, startToken);\n            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {\n                throwErrorTolerant({}, Messages.StrictDelete);\n            }\n        } else {\n            expr = parsePostfixExpression();\n        }\n\n        return expr;\n    }\n\n    function binaryPrecedence(token, allowIn) {\n        var prec = 0;\n\n        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n            return 0;\n        }\n\n        switch (token.value) {\n        case '||':\n            prec = 1;\n            break;\n\n        case '&&':\n            prec = 2;\n            break;\n\n        case '|':\n            prec = 3;\n            break;\n\n        case '^':\n            prec = 4;\n            break;\n\n        case '&':\n            prec = 5;\n            break;\n\n        case '==':\n        case '!=':\n        case '===':\n        case '!==':\n            prec = 6;\n            break;\n\n        case '<':\n        case '>':\n        case '<=':\n        case '>=':\n        case 'instanceof':\n            prec = 7;\n            break;\n\n        case 'in':\n            prec = allowIn ? 7 : 0;\n            break;\n\n        case '<<':\n        case '>>':\n        case '>>>':\n            prec = 8;\n            break;\n\n        case '+':\n        case '-':\n            prec = 9;\n            break;\n\n        case '*':\n        case '/':\n        case '%':\n            prec = 11;\n            break;\n\n        default:\n            break;\n        }\n\n        return prec;\n    }\n\n    // 11.5 Multiplicative Operators\n    // 11.6 Additive Operators\n    // 11.7 Bitwise Shift Operators\n    // 11.8 Relational Operators\n    // 11.9 Equality Operators\n    // 11.10 Binary Bitwise Operators\n    // 11.11 Binary Logical Operators\n\n    function parseBinaryExpression() {\n        var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n        marker = lookahead;\n        left = parseUnaryExpression();\n\n        token = lookahead;\n        prec = binaryPrecedence(token, state.allowIn);\n        if (prec === 0) {\n            return left;\n        }\n        token.prec = prec;\n        lex();\n\n        markers = [marker, lookahead];\n        right = parseUnaryExpression();\n\n        stack = [left, token, right];\n\n        while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n            // Reduce: make a binary expression from the three topmost entries.\n            while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n                right = stack.pop();\n                operator = stack.pop().value;\n                left = stack.pop();\n                expr = delegate.createBinaryExpression(operator, left, right);\n                markers.pop();\n                marker = markers[markers.length - 1];\n                delegate.markEnd(expr, marker);\n                stack.push(expr);\n            }\n\n            // Shift.\n            token = lex();\n            token.prec = prec;\n            stack.push(token);\n            markers.push(lookahead);\n            expr = parseUnaryExpression();\n            stack.push(expr);\n        }\n\n        // Final reduce to clean-up the stack.\n        i = stack.length - 1;\n        expr = stack[i];\n        markers.pop();\n        while (i > 1) {\n            expr = delegate.createBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n            i -= 2;\n            marker = markers.pop();\n            delegate.markEnd(expr, marker);\n        }\n\n        return expr;\n    }\n\n\n    // 11.12 Conditional Operator\n\n    function parseConditionalExpression() {\n        var expr, previousAllowIn, consequent, alternate, startToken;\n\n        startToken = lookahead;\n\n        expr = parseBinaryExpression();\n\n        if (match('?')) {\n            lex();\n            previousAllowIn = state.allowIn;\n            state.allowIn = true;\n            consequent = parseAssignmentExpression();\n            state.allowIn = previousAllowIn;\n            expect(':');\n            alternate = parseAssignmentExpression();\n\n            expr = delegate.createConditionalExpression(expr, consequent, alternate);\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 11.13 Assignment Operators\n\n    function parseAssignmentExpression() {\n        var token, left, right, node, startToken;\n\n        token = lookahead;\n        startToken = lookahead;\n\n        node = left = parseConditionalExpression();\n\n        if (matchAssign()) {\n            // LeftHandSideExpression\n            if (!isLeftHandSide(left)) {\n                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);\n            }\n\n            // 11.13.1\n            if (strict && left.type === Syntax.Identifier && isRestrictedWord(left.name)) {\n                throwErrorTolerant(token, Messages.StrictLHSAssignment);\n            }\n\n            token = lex();\n            right = parseAssignmentExpression();\n            node = delegate.markEnd(delegate.createAssignmentExpression(token.value, left, right), startToken);\n        }\n\n        return node;\n    }\n\n    // 11.14 Comma Operator\n\n    function parseExpression() {\n        var expr, startToken = lookahead;\n\n        expr = parseAssignmentExpression();\n\n        if (match(',')) {\n            expr = delegate.createSequenceExpression([ expr ]);\n\n            while (index < length) {\n                if (!match(',')) {\n                    break;\n                }\n                lex();\n                expr.expressions.push(parseAssignmentExpression());\n            }\n\n            delegate.markEnd(expr, startToken);\n        }\n\n        return expr;\n    }\n\n    // 12.1 Block\n\n    function parseStatementList() {\n        var list = [],\n            statement;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            statement = parseSourceElement();\n            if (typeof statement === 'undefined') {\n                break;\n            }\n            list.push(statement);\n        }\n\n        return list;\n    }\n\n    function parseBlock() {\n        var block, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        block = parseStatementList();\n\n        expect('}');\n\n        return delegate.markEnd(delegate.createBlockStatement(block), startToken);\n    }\n\n    // 12.2 Variable Statement\n\n    function parseVariableIdentifier() {\n        var token, startToken;\n\n        startToken = lookahead;\n        token = lex();\n\n        if (token.type !== Token.Identifier) {\n            throwUnexpected(token);\n        }\n\n        return delegate.markEnd(delegate.createIdentifier(token.value), startToken);\n    }\n\n    function parseVariableDeclaration(kind) {\n        var init = null, id, startToken;\n\n        startToken = lookahead;\n        id = parseVariableIdentifier();\n\n        // 12.2.1\n        if (strict && isRestrictedWord(id.name)) {\n            throwErrorTolerant({}, Messages.StrictVarName);\n        }\n\n        if (kind === 'const') {\n            expect('=');\n            init = parseAssignmentExpression();\n        } else if (match('=')) {\n            lex();\n            init = parseAssignmentExpression();\n        }\n\n        return delegate.markEnd(delegate.createVariableDeclarator(id, init), startToken);\n    }\n\n    function parseVariableDeclarationList(kind) {\n        var list = [];\n\n        do {\n            list.push(parseVariableDeclaration(kind));\n            if (!match(',')) {\n                break;\n            }\n            lex();\n        } while (index < length);\n\n        return list;\n    }\n\n    function parseVariableStatement() {\n        var declarations;\n\n        expectKeyword('var');\n\n        declarations = parseVariableDeclarationList();\n\n        consumeSemicolon();\n\n        return delegate.createVariableDeclaration(declarations, 'var');\n    }\n\n    // kind may be `const` or `let`\n    // Both are experimental and not in the specification yet.\n    // see http://wiki.ecmascript.org/doku.php?id=harmony:const\n    // and http://wiki.ecmascript.org/doku.php?id=harmony:let\n    function parseConstLetDeclaration(kind) {\n        var declarations, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword(kind);\n\n        declarations = parseVariableDeclarationList(kind);\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, kind), startToken);\n    }\n\n    // 12.3 Empty Statement\n\n    function parseEmptyStatement() {\n        expect(';');\n        return delegate.createEmptyStatement();\n    }\n\n    // 12.4 Expression Statement\n\n    function parseExpressionStatement() {\n        var expr = parseExpression();\n        consumeSemicolon();\n        return delegate.createExpressionStatement(expr);\n    }\n\n    // 12.5 If statement\n\n    function parseIfStatement() {\n        var test, consequent, alternate;\n\n        expectKeyword('if');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        consequent = parseStatement();\n\n        if (matchKeyword('else')) {\n            lex();\n            alternate = parseStatement();\n        } else {\n            alternate = null;\n        }\n\n        return delegate.createIfStatement(test, consequent, alternate);\n    }\n\n    // 12.6 Iteration Statements\n\n    function parseDoWhileStatement() {\n        var body, test, oldInIteration;\n\n        expectKeyword('do');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        if (match(';')) {\n            lex();\n        }\n\n        return delegate.createDoWhileStatement(body, test);\n    }\n\n    function parseWhileStatement() {\n        var test, body, oldInIteration;\n\n        expectKeyword('while');\n\n        expect('(');\n\n        test = parseExpression();\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return delegate.createWhileStatement(test, body);\n    }\n\n    function parseForVariableDeclaration() {\n        var token, declarations, startToken;\n\n        startToken = lookahead;\n        token = lex();\n        declarations = parseVariableDeclarationList();\n\n        return delegate.markEnd(delegate.createVariableDeclaration(declarations, token.value), startToken);\n    }\n\n    function parseForStatement() {\n        var init, test, update, left, right, body, oldInIteration, previousAllowIn = state.allowIn;\n\n        init = test = update = null;\n\n        expectKeyword('for');\n\n        expect('(');\n\n        if (match(';')) {\n            lex();\n        } else {\n            if (matchKeyword('var') || matchKeyword('let')) {\n                state.allowIn = false;\n                init = parseForVariableDeclaration();\n                state.allowIn = previousAllowIn;\n\n                if (init.declarations.length === 1 && matchKeyword('in')) {\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            } else {\n                state.allowIn = false;\n                init = parseExpression();\n                state.allowIn = previousAllowIn;\n\n                if (matchKeyword('in')) {\n                    // LeftHandSideExpression\n                    if (!isLeftHandSide(init)) {\n                        throwErrorTolerant({}, Messages.InvalidLHSInForIn);\n                    }\n\n                    lex();\n                    left = init;\n                    right = parseExpression();\n                    init = null;\n                }\n            }\n\n            if (typeof left === 'undefined') {\n                expect(';');\n            }\n        }\n\n        if (typeof left === 'undefined') {\n\n            if (!match(';')) {\n                test = parseExpression();\n            }\n            expect(';');\n\n            if (!match(')')) {\n                update = parseExpression();\n            }\n        }\n\n        expect(')');\n\n        oldInIteration = state.inIteration;\n        state.inIteration = true;\n\n        body = parseStatement();\n\n        state.inIteration = oldInIteration;\n\n        return (typeof left === 'undefined') ?\n                delegate.createForStatement(init, test, update, body) :\n                delegate.createForInStatement(left, right, body);\n    }\n\n    // 12.7 The continue statement\n\n    function parseContinueStatement() {\n        var label = null, key;\n\n        expectKeyword('continue');\n\n        // Optimize the most common form: 'continue;'.\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!state.inIteration) {\n                throwError({}, Messages.IllegalContinue);\n            }\n\n            return delegate.createContinueStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !state.inIteration) {\n            throwError({}, Messages.IllegalContinue);\n        }\n\n        return delegate.createContinueStatement(label);\n    }\n\n    // 12.8 The break statement\n\n    function parseBreakStatement() {\n        var label = null, key;\n\n        expectKeyword('break');\n\n        // Catch the very common case first: immediately a semicolon (U+003B).\n        if (source.charCodeAt(index) === 0x3B) {\n            lex();\n\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (peekLineTerminator()) {\n            if (!(state.inIteration || state.inSwitch)) {\n                throwError({}, Messages.IllegalBreak);\n            }\n\n            return delegate.createBreakStatement(null);\n        }\n\n        if (lookahead.type === Token.Identifier) {\n            label = parseVariableIdentifier();\n\n            key = '$' + label.name;\n            if (!Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.UnknownLabel, label.name);\n            }\n        }\n\n        consumeSemicolon();\n\n        if (label === null && !(state.inIteration || state.inSwitch)) {\n            throwError({}, Messages.IllegalBreak);\n        }\n\n        return delegate.createBreakStatement(label);\n    }\n\n    // 12.9 The return statement\n\n    function parseReturnStatement() {\n        var argument = null;\n\n        expectKeyword('return');\n\n        if (!state.inFunctionBody) {\n            throwErrorTolerant({}, Messages.IllegalReturn);\n        }\n\n        // 'return' followed by a space and an identifier is very common.\n        if (source.charCodeAt(index) === 0x20) {\n            if (isIdentifierStart(source.charCodeAt(index + 1))) {\n                argument = parseExpression();\n                consumeSemicolon();\n                return delegate.createReturnStatement(argument);\n            }\n        }\n\n        if (peekLineTerminator()) {\n            return delegate.createReturnStatement(null);\n        }\n\n        if (!match(';')) {\n            if (!match('}') && lookahead.type !== Token.EOF) {\n                argument = parseExpression();\n            }\n        }\n\n        consumeSemicolon();\n\n        return delegate.createReturnStatement(argument);\n    }\n\n    // 12.10 The with statement\n\n    function parseWithStatement() {\n        var object, body;\n\n        if (strict) {\n            // TODO(ikarienator): Should we update the test cases instead?\n            skipComment();\n            throwErrorTolerant({}, Messages.StrictModeWith);\n        }\n\n        expectKeyword('with');\n\n        expect('(');\n\n        object = parseExpression();\n\n        expect(')');\n\n        body = parseStatement();\n\n        return delegate.createWithStatement(object, body);\n    }\n\n    // 12.10 The swith statement\n\n    function parseSwitchCase() {\n        var test, consequent = [], statement, startToken;\n\n        startToken = lookahead;\n        if (matchKeyword('default')) {\n            lex();\n            test = null;\n        } else {\n            expectKeyword('case');\n            test = parseExpression();\n        }\n        expect(':');\n\n        while (index < length) {\n            if (match('}') || matchKeyword('default') || matchKeyword('case')) {\n                break;\n            }\n            statement = parseStatement();\n            consequent.push(statement);\n        }\n\n        return delegate.markEnd(delegate.createSwitchCase(test, consequent), startToken);\n    }\n\n    function parseSwitchStatement() {\n        var discriminant, cases, clause, oldInSwitch, defaultFound;\n\n        expectKeyword('switch');\n\n        expect('(');\n\n        discriminant = parseExpression();\n\n        expect(')');\n\n        expect('{');\n\n        cases = [];\n\n        if (match('}')) {\n            lex();\n            return delegate.createSwitchStatement(discriminant, cases);\n        }\n\n        oldInSwitch = state.inSwitch;\n        state.inSwitch = true;\n        defaultFound = false;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            clause = parseSwitchCase();\n            if (clause.test === null) {\n                if (defaultFound) {\n                    throwError({}, Messages.MultipleDefaultsInSwitch);\n                }\n                defaultFound = true;\n            }\n            cases.push(clause);\n        }\n\n        state.inSwitch = oldInSwitch;\n\n        expect('}');\n\n        return delegate.createSwitchStatement(discriminant, cases);\n    }\n\n    // 12.13 The throw statement\n\n    function parseThrowStatement() {\n        var argument;\n\n        expectKeyword('throw');\n\n        if (peekLineTerminator()) {\n            throwError({}, Messages.NewlineAfterThrow);\n        }\n\n        argument = parseExpression();\n\n        consumeSemicolon();\n\n        return delegate.createThrowStatement(argument);\n    }\n\n    // 12.14 The try statement\n\n    function parseCatchClause() {\n        var param, body, startToken;\n\n        startToken = lookahead;\n        expectKeyword('catch');\n\n        expect('(');\n        if (match(')')) {\n            throwUnexpected(lookahead);\n        }\n\n        param = parseVariableIdentifier();\n        // 12.14.1\n        if (strict && isRestrictedWord(param.name)) {\n            throwErrorTolerant({}, Messages.StrictCatchVariable);\n        }\n\n        expect(')');\n        body = parseBlock();\n        return delegate.markEnd(delegate.createCatchClause(param, body), startToken);\n    }\n\n    function parseTryStatement() {\n        var block, handlers = [], finalizer = null;\n\n        expectKeyword('try');\n\n        block = parseBlock();\n\n        if (matchKeyword('catch')) {\n            handlers.push(parseCatchClause());\n        }\n\n        if (matchKeyword('finally')) {\n            lex();\n            finalizer = parseBlock();\n        }\n\n        if (handlers.length === 0 && !finalizer) {\n            throwError({}, Messages.NoCatchOrFinally);\n        }\n\n        return delegate.createTryStatement(block, [], handlers, finalizer);\n    }\n\n    // 12.15 The debugger statement\n\n    function parseDebuggerStatement() {\n        expectKeyword('debugger');\n\n        consumeSemicolon();\n\n        return delegate.createDebuggerStatement();\n    }\n\n    // 12 Statements\n\n    function parseStatement() {\n        var type = lookahead.type,\n            expr,\n            labeledBody,\n            key,\n            startToken;\n\n        if (type === Token.EOF) {\n            throwUnexpected(lookahead);\n        }\n\n        if (type === Token.Punctuator && lookahead.value === '{') {\n            return parseBlock();\n        }\n\n        startToken = lookahead;\n\n        if (type === Token.Punctuator) {\n            switch (lookahead.value) {\n            case ';':\n                return delegate.markEnd(parseEmptyStatement(), startToken);\n            case '(':\n                return delegate.markEnd(parseExpressionStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        if (type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'break':\n                return delegate.markEnd(parseBreakStatement(), startToken);\n            case 'continue':\n                return delegate.markEnd(parseContinueStatement(), startToken);\n            case 'debugger':\n                return delegate.markEnd(parseDebuggerStatement(), startToken);\n            case 'do':\n                return delegate.markEnd(parseDoWhileStatement(), startToken);\n            case 'for':\n                return delegate.markEnd(parseForStatement(), startToken);\n            case 'function':\n                return delegate.markEnd(parseFunctionDeclaration(), startToken);\n            case 'if':\n                return delegate.markEnd(parseIfStatement(), startToken);\n            case 'return':\n                return delegate.markEnd(parseReturnStatement(), startToken);\n            case 'switch':\n                return delegate.markEnd(parseSwitchStatement(), startToken);\n            case 'throw':\n                return delegate.markEnd(parseThrowStatement(), startToken);\n            case 'try':\n                return delegate.markEnd(parseTryStatement(), startToken);\n            case 'var':\n                return delegate.markEnd(parseVariableStatement(), startToken);\n            case 'while':\n                return delegate.markEnd(parseWhileStatement(), startToken);\n            case 'with':\n                return delegate.markEnd(parseWithStatement(), startToken);\n            default:\n                break;\n            }\n        }\n\n        expr = parseExpression();\n\n        // 12.12 Labelled Statements\n        if ((expr.type === Syntax.Identifier) && match(':')) {\n            lex();\n\n            key = '$' + expr.name;\n            if (Object.prototype.hasOwnProperty.call(state.labelSet, key)) {\n                throwError({}, Messages.Redeclaration, 'Label', expr.name);\n            }\n\n            state.labelSet[key] = true;\n            labeledBody = parseStatement();\n            delete state.labelSet[key];\n            return delegate.markEnd(delegate.createLabeledStatement(expr, labeledBody), startToken);\n        }\n\n        consumeSemicolon();\n\n        return delegate.markEnd(delegate.createExpressionStatement(expr), startToken);\n    }\n\n    // 13 Function Definition\n\n    function parseFunctionSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted,\n            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody, startToken;\n\n        startToken = lookahead;\n        expect('{');\n\n        while (index < length) {\n            if (lookahead.type !== Token.StringLiteral) {\n                break;\n            }\n            token = lookahead;\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        oldLabelSet = state.labelSet;\n        oldInIteration = state.inIteration;\n        oldInSwitch = state.inSwitch;\n        oldInFunctionBody = state.inFunctionBody;\n\n        state.labelSet = {};\n        state.inIteration = false;\n        state.inSwitch = false;\n        state.inFunctionBody = true;\n\n        while (index < length) {\n            if (match('}')) {\n                break;\n            }\n            sourceElement = parseSourceElement();\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n\n        expect('}');\n\n        state.labelSet = oldLabelSet;\n        state.inIteration = oldInIteration;\n        state.inSwitch = oldInSwitch;\n        state.inFunctionBody = oldInFunctionBody;\n\n        return delegate.markEnd(delegate.createBlockStatement(sourceElements), startToken);\n    }\n\n    function parseParams(firstRestricted) {\n        var param, params = [], token, stricted, paramSet, key, message;\n        expect('(');\n\n        if (!match(')')) {\n            paramSet = {};\n            while (index < length) {\n                token = lookahead;\n                param = parseVariableIdentifier();\n                key = '$' + token.value;\n                if (strict) {\n                    if (isRestrictedWord(token.value)) {\n                        stricted = token;\n                        message = Messages.StrictParamName;\n                    }\n                    if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        stricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                } else if (!firstRestricted) {\n                    if (isRestrictedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamName;\n                    } else if (isStrictModeReservedWord(token.value)) {\n                        firstRestricted = token;\n                        message = Messages.StrictReservedWord;\n                    } else if (Object.prototype.hasOwnProperty.call(paramSet, key)) {\n                        firstRestricted = token;\n                        message = Messages.StrictParamDupe;\n                    }\n                }\n                params.push(param);\n                paramSet[key] = true;\n                if (match(')')) {\n                    break;\n                }\n                expect(',');\n            }\n        }\n\n        expect(')');\n\n        return {\n            params: params,\n            stricted: stricted,\n            firstRestricted: firstRestricted,\n            message: message\n        };\n    }\n\n    function parseFunctionDeclaration() {\n        var id, params = [], body, token, stricted, tmp, firstRestricted, message, previousStrict, startToken;\n\n        startToken = lookahead;\n\n        expectKeyword('function');\n        token = lookahead;\n        id = parseVariableIdentifier();\n        if (strict) {\n            if (isRestrictedWord(token.value)) {\n                throwErrorTolerant(token, Messages.StrictFunctionName);\n            }\n        } else {\n            if (isRestrictedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictFunctionName;\n            } else if (isStrictModeReservedWord(token.value)) {\n                firstRestricted = token;\n                message = Messages.StrictReservedWord;\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionDeclaration(id, params, [], body), startToken);\n    }\n\n    function parseFunctionExpression() {\n        var token, id = null, stricted, firstRestricted, message, tmp, params = [], body, previousStrict, startToken;\n\n        startToken = lookahead;\n        expectKeyword('function');\n\n        if (!match('(')) {\n            token = lookahead;\n            id = parseVariableIdentifier();\n            if (strict) {\n                if (isRestrictedWord(token.value)) {\n                    throwErrorTolerant(token, Messages.StrictFunctionName);\n                }\n            } else {\n                if (isRestrictedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictFunctionName;\n                } else if (isStrictModeReservedWord(token.value)) {\n                    firstRestricted = token;\n                    message = Messages.StrictReservedWord;\n                }\n            }\n        }\n\n        tmp = parseParams(firstRestricted);\n        params = tmp.params;\n        stricted = tmp.stricted;\n        firstRestricted = tmp.firstRestricted;\n        if (tmp.message) {\n            message = tmp.message;\n        }\n\n        previousStrict = strict;\n        body = parseFunctionSourceElements();\n        if (strict && firstRestricted) {\n            throwError(firstRestricted, message);\n        }\n        if (strict && stricted) {\n            throwErrorTolerant(stricted, message);\n        }\n        strict = previousStrict;\n\n        return delegate.markEnd(delegate.createFunctionExpression(id, params, [], body), startToken);\n    }\n\n    // 14 Program\n\n    function parseSourceElement() {\n        if (lookahead.type === Token.Keyword) {\n            switch (lookahead.value) {\n            case 'const':\n            case 'let':\n                return parseConstLetDeclaration(lookahead.value);\n            case 'function':\n                return parseFunctionDeclaration();\n            default:\n                return parseStatement();\n            }\n        }\n\n        if (lookahead.type !== Token.EOF) {\n            return parseStatement();\n        }\n    }\n\n    function parseSourceElements() {\n        var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n        while (index < length) {\n            token = lookahead;\n            if (token.type !== Token.StringLiteral) {\n                break;\n            }\n\n            sourceElement = parseSourceElement();\n            sourceElements.push(sourceElement);\n            if (sourceElement.expression.type !== Syntax.Literal) {\n                // this is not directive\n                break;\n            }\n            directive = source.slice(token.start + 1, token.end - 1);\n            if (directive === 'use strict') {\n                strict = true;\n                if (firstRestricted) {\n                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n                }\n            } else {\n                if (!firstRestricted && token.octal) {\n                    firstRestricted = token;\n                }\n            }\n        }\n\n        while (index < length) {\n            sourceElement = parseSourceElement();\n            /* istanbul ignore if */\n            if (typeof sourceElement === 'undefined') {\n                break;\n            }\n            sourceElements.push(sourceElement);\n        }\n        return sourceElements;\n    }\n\n    function parseProgram() {\n        var body, startToken;\n\n        skipComment();\n        peek();\n        startToken = lookahead;\n        strict = false;\n\n        body = parseSourceElements();\n        return delegate.markEnd(delegate.createProgram(body), startToken);\n    }\n\n    function filterTokenLocation() {\n        var i, entry, token, tokens = [];\n\n        for (i = 0; i < extra.tokens.length; ++i) {\n            entry = extra.tokens[i];\n            token = {\n                type: entry.type,\n                value: entry.value\n            };\n            if (extra.range) {\n                token.range = entry.range;\n            }\n            if (extra.loc) {\n                token.loc = entry.loc;\n            }\n            tokens.push(token);\n        }\n\n        extra.tokens = tokens;\n    }\n\n    function tokenize(code, options) {\n        var toString,\n            token,\n            tokens;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n\n        // Options matching.\n        options = options || {};\n\n        // Of course we collect tokens here.\n        options.tokens = true;\n        extra.tokens = [];\n        extra.tokenize = true;\n        // The following two fields are necessary to compute the Regex tokens.\n        extra.openParenToken = -1;\n        extra.openCurlyToken = -1;\n\n        extra.range = (typeof options.range === 'boolean') && options.range;\n        extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n        if (typeof options.comment === 'boolean' && options.comment) {\n            extra.comments = [];\n        }\n        if (typeof options.tolerant === 'boolean' && options.tolerant) {\n            extra.errors = [];\n        }\n\n        try {\n            peek();\n            if (lookahead.type === Token.EOF) {\n                return extra.tokens;\n            }\n\n            token = lex();\n            while (lookahead.type !== Token.EOF) {\n                try {\n                    token = lex();\n                } catch (lexError) {\n                    token = lookahead;\n                    if (extra.errors) {\n                        extra.errors.push(lexError);\n                        // We have to break on the first error\n                        // to avoid infinite loops.\n                        break;\n                    } else {\n                        throw lexError;\n                    }\n                }\n            }\n\n            filterTokenLocation();\n            tokens = extra.tokens;\n            if (typeof extra.comments !== 'undefined') {\n                tokens.comments = extra.comments;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                tokens.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n        return tokens;\n    }\n\n    function parse(code, options) {\n        var program, toString;\n\n        toString = String;\n        if (typeof code !== 'string' && !(code instanceof String)) {\n            code = toString(code);\n        }\n\n        delegate = SyntaxTreeDelegate;\n        source = code;\n        index = 0;\n        lineNumber = (source.length > 0) ? 1 : 0;\n        lineStart = 0;\n        length = source.length;\n        lookahead = null;\n        state = {\n            allowIn: true,\n            labelSet: {},\n            inFunctionBody: false,\n            inIteration: false,\n            inSwitch: false,\n            lastCommentStart: -1\n        };\n\n        extra = {};\n        if (typeof options !== 'undefined') {\n            extra.range = (typeof options.range === 'boolean') && options.range;\n            extra.loc = (typeof options.loc === 'boolean') && options.loc;\n            extra.attachComment = (typeof options.attachComment === 'boolean') && options.attachComment;\n\n            if (extra.loc && options.source !== null && options.source !== undefined) {\n                extra.source = toString(options.source);\n            }\n\n            if (typeof options.tokens === 'boolean' && options.tokens) {\n                extra.tokens = [];\n            }\n            if (typeof options.comment === 'boolean' && options.comment) {\n                extra.comments = [];\n            }\n            if (typeof options.tolerant === 'boolean' && options.tolerant) {\n                extra.errors = [];\n            }\n            if (extra.attachComment) {\n                extra.range = true;\n                extra.comments = [];\n                extra.bottomRightStack = [];\n                extra.trailingComments = [];\n                extra.leadingComments = [];\n            }\n        }\n\n        try {\n            program = parseProgram();\n            if (typeof extra.comments !== 'undefined') {\n                program.comments = extra.comments;\n            }\n            if (typeof extra.tokens !== 'undefined') {\n                filterTokenLocation();\n                program.tokens = extra.tokens;\n            }\n            if (typeof extra.errors !== 'undefined') {\n                program.errors = extra.errors;\n            }\n        } catch (e) {\n            throw e;\n        } finally {\n            extra = {};\n        }\n\n        return program;\n    }\n\n    // Sync with *.json manifests.\n    exports.version = '1.2.5';\n\n    exports.tokenize = tokenize;\n\n    exports.parse = parse;\n\n    // Deep copy.\n   /* istanbul ignore next */\n    exports.Syntax = (function () {\n        var name, types = {};\n\n        if (typeof Object.create === 'function') {\n            types = Object.create(null);\n        }\n\n        for (name in Syntax) {\n            if (Syntax.hasOwnProperty(name)) {\n                types[name] = Syntax[name];\n            }\n        }\n\n        if (typeof Object.freeze === 'function') {\n            Object.freeze(types);\n        }\n\n        return types;\n    }());\n\n}));\n/* vim: set sw=4 ts=4 et tw=80 : */\n","\"use strict\"\n\nvar esprima = require(\"esprima\")\nvar uniq = require(\"uniq\")\n\nvar PREFIX_COUNTER = 0\n\nfunction CompiledArgument(name, lvalue, rvalue) {\n  this.name = name\n  this.lvalue = lvalue\n  this.rvalue = rvalue\n  this.count = 0\n}\n\nfunction CompiledRoutine(body, args, thisVars, localVars) {\n  this.body = body\n  this.args = args\n  this.thisVars = thisVars\n  this.localVars = localVars\n}\n\nfunction isGlobal(identifier) {\n  if(identifier === \"eval\") {\n    throw new Error(\"cwise-parser: eval() not allowed\")\n  }\n  if(typeof window !== \"undefined\") {\n    return identifier in window\n  } else if(typeof global !== \"undefined\") {\n    return identifier in global\n  } else if(typeof self !== \"undefined\") {\n    return identifier in self\n  } else {\n    return false\n  }\n}\n\nfunction getArgNames(ast) {\n  var params = ast.body[0].expression.callee.params\n  var names = new Array(params.length)\n  for(var i=0; i<params.length; ++i) {\n    names[i] = params[i].name\n  }\n  return names\n}\n\nfunction preprocess(func) {\n  var src = [\"(\", func, \")()\"].join(\"\")\n  var ast = esprima.parse(src, { range: true })\n  \n  //Compute new prefix\n  var prefix = \"_inline_\" + (PREFIX_COUNTER++) + \"_\"\n  \n  //Parse out arguments\n  var argNames = getArgNames(ast)\n  var compiledArgs = new Array(argNames.length)\n  for(var i=0; i<argNames.length; ++i) {\n    compiledArgs[i] = new CompiledArgument([prefix, \"arg\", i, \"_\"].join(\"\"), false, false)\n  }\n  \n  //Create temporary data structure for source rewriting\n  var exploded = new Array(src.length)\n  for(var i=0, n=src.length; i<n; ++i) {\n    exploded[i] = src.charAt(i)\n  }\n  \n  //Local variables\n  var localVars = []\n  var thisVars = []\n  var computedThis = false\n  \n  //Retrieves a local variable\n  function createLocal(id) {\n    var nstr = prefix + id.replace(/\\_/g, \"__\")\n    localVars.push(nstr)\n    return nstr\n  }\n  \n  //Creates a this variable\n  function createThisVar(id) {\n    var nstr = \"this_\" + id.replace(/\\_/g, \"__\")\n    thisVars.push(nstr)\n    return nstr\n  }\n  \n  //Rewrites an ast node\n  function rewrite(node, nstr) {\n    var lo = node.range[0], hi = node.range[1]\n    for(var i=lo+1; i<hi; ++i) {\n      exploded[i] = \"\"\n    }\n    exploded[lo] = nstr\n  }\n  \n  //Remove any underscores\n  function escapeString(str) {\n    return \"'\"+(str.replace(/\\_/g, \"\\\\_\").replace(/\\'/g, \"\\'\"))+\"'\"\n  }\n  \n  //Returns the source of an identifier\n  function source(node) {\n    return exploded.slice(node.range[0], node.range[1]).join(\"\")\n  }\n  \n  //Computes the usage of a node\n  var LVALUE = 1\n  var RVALUE = 2\n  function getUsage(node) {\n    if(node.parent.type === \"AssignmentExpression\") {\n      if(node.parent.left === node) {\n        if(node.parent.operator === \"=\") {\n          return LVALUE\n        }\n        return LVALUE|RVALUE\n      }\n    }\n    if(node.parent.type === \"UpdateExpression\") {\n      return LVALUE|RVALUE\n    }\n    return RVALUE\n  }\n  \n  //Handle visiting a node\n  (function visit(node, parent) {\n    node.parent = parent\n    if(node.type === \"MemberExpression\") {\n      //Handle member expression\n      if(node.computed) {\n        visit(node.object, node)\n        visit(node.property, node)\n      } else if(node.object.type === \"ThisExpression\") {\n        rewrite(node, createThisVar(node.property.name))\n      } else {\n        visit(node.object, node)\n      }\n    } else if(node.type === \"ThisExpression\") {\n      throw new Error(\"cwise-parser: Computed this is not allowed\")\n    } else if(node.type === \"Identifier\") {\n      //Handle identifier\n      var name = node.name\n      var argNo = argNames.indexOf(name)\n      if(argNo >= 0) {\n        var carg = compiledArgs[argNo]\n        var usage = getUsage(node)\n        if(usage & LVALUE) {\n          carg.lvalue = true\n        }\n        if(usage & RVALUE) {\n          carg.rvalue = true\n        }\n        ++carg.count\n        rewrite(node, carg.name)\n      } else if(isGlobal(name)) {\n        //Don't rewrite globals\n      } else {\n        rewrite(node, createLocal(name))\n      }\n    } else if(node.type === \"Literal\") {\n      if(typeof node.value === \"string\") {\n        rewrite(node, escapeString(node.value))\n      }\n    } else if(node.type === \"WithStatement\") {\n      throw new Error(\"cwise-parser: with() statements not allowed\")\n    } else {\n      //Visit all children\n      var keys = Object.keys(node)\n      for(var i=0, n=keys.length; i<n; ++i) {\n        if(keys[i] === \"parent\") {\n          continue\n        }\n        var value = node[keys[i]]\n        if(value) {\n          if(value instanceof Array) {\n            for(var j=0; j<value.length; ++j) {\n              if(value[j] && typeof value[j].type === \"string\") {\n                visit(value[j], node)\n              }\n            }\n          } else if(typeof value.type === \"string\") {\n            visit(value, node)\n          }\n        }\n      }\n    }\n  })(ast.body[0].expression.callee.body, undefined)\n  \n  //Remove duplicate variables\n  uniq(localVars)\n  uniq(thisVars)\n  \n  //Return body\n  var routine = new CompiledRoutine(source(ast.body[0].expression.callee.body), compiledArgs, thisVars, localVars)\n  return routine\n}\n\nmodule.exports = preprocess","\"use strict\"\n\nvar parse   = require(\"cwise-parser\")\nvar compile = require(\"cwise-compiler\")\n\nvar REQUIRED_FIELDS = [ \"args\", \"body\" ]\nvar OPTIONAL_FIELDS = [ \"pre\", \"post\", \"printCode\", \"funcName\", \"blockSize\" ]\n\nfunction createCWise(user_args) {\n  //Check parameters\n  for(var id in user_args) {\n    if(REQUIRED_FIELDS.indexOf(id) < 0 &&\n       OPTIONAL_FIELDS.indexOf(id) < 0) {\n      console.warn(\"cwise: Unknown argument '\"+id+\"' passed to expression compiler\")\n    }\n  }\n  for(var i=0; i<REQUIRED_FIELDS.length; ++i) {\n    if(!user_args[REQUIRED_FIELDS[i]]) {\n      throw new Error(\"cwise: Missing argument: \" + REQUIRED_FIELDS[i])\n    }\n  }\n  \n  //Parse blocks\n  return compile({\n    args:       user_args.args,\n    pre:        parse(user_args.pre || function(){}),\n    body:       parse(user_args.body),\n    post:       parse(user_args.post || function(){}),\n    debug:      !!user_args.printCode,\n    funcName:   user_args.funcName || user_args.body.name || \"cwise\",\n    blockSize:  user_args.blockSize || 64\n  })\n}\n\nmodule.exports = createCWise\n","\"use strict\"\n\nvar dup = require(\"dup\")\nvar cwise = require(\"cwise\")\n\nvar do_unpack = cwise({ \n  args: [\"array\", \"scalar\", \"index\"],\n  body: function unpackCwise(arr, a, idx) {\n    var v = a, i\n    for(i=0;i<idx.length-1;++i) {\n      v=v[idx[i]]\n    }\n    v[idx[idx.length-1]]=arr\n  }\n})\n\nmodule.exports = function unpack(arr) {\n  var result = dup(arr.shape)\n  do_unpack(arr, result)\n  return result\n}\n","import ndarray from \"ndarray\";\nimport zeros from \"zeros\";\nimport * as ops from 'ndarray-ops';\nimport pack from 'ndarray-pack';\nimport gemm from 'ndarray-gemm';\nimport diagonal from 'ndarray-diagonal';\nimport unpack from 'ndarray-unpack';\n\nexport function ndarrayToNative(x) { return unpack(x); }\nexport function ndarrayColsToNative(x) { return unpack(x.transpose(1, 0)); }\n\nexport default function sampleSphericalCap(params) {\n  params = params == null ? {N : 1, z : 0} : params;\n\n  const π = Math.PI;\n  const π2 = 2 * π;\n  const halfπ = 0.5 * π;\n  const radPerDeg = π / 180;\n\n  const minZ =\n      (params.z ? +params.z\n                : (params.deg ? Math.cos(+params.deg * radPerDeg)\n                              : (params.rad ? Math.cos(+params.rad) : 0)));\n  const N = params.N ? +params.N : 1;\n  return pack(Array.from({length : N}, _ => {\n           const z = Math.random() * (1 - minZ) + minZ;\n           const r = Math.sqrt(1 - z * z);\n           const θ = Math.random() * π2;\n           const x = r * Math.cos(θ);\n           const y = r * Math.sin(θ);\n           return [ x, y, z ];\n         })).transpose(1, 0);\n}\n\nexport function asNdarray(x) { return x.data ? x : pack(x); }\n\nexport function sampleDirectedSphericalCap(direction, ...args) {\n  const normDir = normalizeCols(asNdarray(direction));\n  const rotAxis = normalizeCols(dot(crossMatrix(0, 0, 1), normDir));\n  const rotAngle =\n      Math.acos(dot(ndarray([ 0, 0, 1 ], [ 1, 3 ]), normDir).get(0, 0));\n  const R = axisAngleToRotationMatrix(rotAxis, rotAngle);\n\n  const samples = sampleSphericalCap(...args);\n\n  return dot(R, samples);\n}\n\nexport function axisAngleToRotationMatrix(axis, angleRad) {\n  const C = crossMatrix(...ndToIterator(axis));\n  ops.mulseq(C, Math.sin(angleRad));\n\n  const R = zeros([ 3, 3 ]);\n  ops.assigns(diagonal(R), Math.cos(angleRad));\n\n  ops.addeq(R, C);\n\n  gemm(R, axis, axis.transpose(1, 0), 1 - Math.cos(angleRad), 1);\n\n  return R;\n}\n\nexport function crossMatrix(x, y, z) {\n  return pack([\n    [ 0, -z, y ], //\n    [ z, 0, -x ], //\n    [ -y, x, 0 ]\n  ]);\n}\n\nexport function dot(...args) {\n  return args.reduce((sofar, curr) => {\n    const result = zeros([ sofar.shape[0], curr.shape[1] ]);\n    gemm(result, sofar, curr);\n    return result;\n  });\n}\n\nexport function ndToIterator(x) { return x.data || x; }\n\n// Can https://github.com/scijs/cwise#compute-2d-vector-norms-using-blocks be\n// used here?\nexport function normalizeCols(x) {\n  for (var i = 0; i < x.shape[1]; i++) {\n    const col = x.pick(null, i);\n    const norm = ops.norm2(col);\n    if (norm > 0) {\n      ops.divseq(col, norm);\n    }\n  }\n  return x;\n}\n\nexport function normalizeColsPure(x) {\n  const y = zeros(x.shape);\n  for (var i = 0; i < x.shape[1]; i++) {\n    const col = x.pick(null, i);\n    const norm = ops.norm2(col);\n    if (norm > 0) {\n      ops.divs(y.pick(null, i), col, norm);\n    }\n  }\n  return y;\n}\n\nexport function example1() { return ops.random(ndarray([ 1, 2, 3, 4 ], [ 2, 2 ])); }\n\nexport function example2() {\n  const a = ops.random(zeros([ 2, 2 ]));\n  const b = ndarray([ 100, 200, 300, 400 ], [ 2, 2 ]);\n  const c = zeros([ 2, 2 ]);\n  ops.add(c, a, b);\n  return c;\n}\n"],"names":["commonjsHelpers.interopDefault","commonjsHelpers.commonjsGlobal","unpack","ndarray","zeros","ops.norm2","ops.random"],"mappings":"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"}